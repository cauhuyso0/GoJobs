Index: app/src/main/java/vn/com/gojobs/Fragment/AddJobFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Fragment;\r\n\r\nimport android.app.DatePickerDialog;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.CheckBox;\r\nimport android.widget.CompoundButton;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.List;\r\nimport java.util.TimeZone;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.Employer.LoginEmployerFragment;\r\nimport vn.com.gojobs.Model.Location;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.interfake.API;\r\n\r\nimport static vn.com.gojobs.Employer.LoginEmployerFragment._id;\r\n\r\npublic class AddJobFragment extends Fragment implements View.OnClickListener {\r\n\r\n    public static final String TAG = \"AddJobFragment\";\r\n    private final String DATE_FORMAT = \"dd-MM-yyyy\";\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    FragmentManager fragmentManager;\r\n    private Button btnAddJob;\r\n    private String endEmpId;\r\n    private EditText edtTitleJob, edtDescriberJob, edtLuong, edtThoiHan, edtSoLuongUngVien, edtDiaChi;\r\n    private TextView tvNgayBatDau, tvNgayKetThuc, tvTongLuong;\r\n    private CheckBox cbCo, cbKhong;\r\n    final Calendar newCalendar = Calendar.getInstance();\r\n\r\n    private Spinner spLoaiCV, spNganhNghe, spQuan, spTP;\r\n\r\n    private String[] loaiCVs = {\"Theo giờ\", \"Theo ngày\"};\r\n    private String[] nganhNghes = {\"Kĩ sư phần mền\", \"Thiết kế đồ họa\", \"Lao động phổ thông\", \"Phụ bếp, nhà hàng - khách sạn\",\r\n            \"Hướng dẫn viên du lịch \", \"Tiếp thị\", \"Nhân viên BĐS\",\r\n            \"Giúp việc\", \"Giữ trẻ\", \"Chăm sóc thú cưng\", \"Dạy kèm\", \"Phụ quán\"};\r\n    private ArrayList<String> districts = new ArrayList<>();\r\n    private ArrayList<String> province = new ArrayList<>();\r\n    private int tongLuong = 0;\r\n    private String tenCV = \"\", motaCV = \"\", loaiCV = \"\", nganhNghe = \"\", diaChi = \"\";\r\n    private int luong, thoiHan, soLuongUngVien;\r\n    private boolean yeuCauKN;\r\n    private ArrayList<Location> locations;\r\n    String accessTokenDb;\r\n\r\n    public AddJobFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_add_job, container, false);\r\n\r\n        mapItem(view);\r\n\r\n        setOnClick();\r\n\r\n        if (_id != null) {\r\n            endEmpId = _id;\r\n            accessTokenDb = LoginEmployerFragment.accessTokenDb;\r\n        } else {\r\n            endEmpId = AuthActivity.empId;\r\n            accessTokenDb = AuthActivity.accessTokenDbEmp;\r\n        }\r\n\r\n        //dummy data\r\n        ArrayAdapter aa = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, loaiCVs);\r\n        aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        //Setting the ArrayAdapter data on the Spinner\r\n        spLoaiCV.setAdapter(aa);\r\n\r\n        ArrayAdapter dd = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, nganhNghes);\r\n        dd.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        //Setting the ArrayAdapter data on the Spinner\r\n        spNganhNghe.setAdapter(dd);\r\n\r\n\r\n        // call api set data for district\r\n        getCity();\r\n\r\n        spTP.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                String tinh = spTP.getSelectedItem().toString();\r\n                for (Location location : locations) {\r\n                    if (tinh.equals(location.getTitle())) {\r\n                        getDistrict(location.getID());\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    private void mapItem(View view) {\r\n        edtTitleJob = view.findViewById(R.id.edt_job_title);\r\n        edtDescriberJob = view.findViewById(R.id.edt_mo_ta_cong_viec);\r\n        spLoaiCV = view.findViewById(R.id.spinner_loai_cong_viec);\r\n        edtLuong = view.findViewById(R.id.edt_luong);\r\n        cbCo = view.findViewById(R.id.cb_co);\r\n        cbKhong = view.findViewById(R.id.cb_khong);\r\n        spNganhNghe = view.findViewById(R.id.spn_nganh_nghe);\r\n        edtThoiHan = view.findViewById(R.id.edt_thoi_han);\r\n        tvNgayBatDau = view.findViewById(R.id.tv_ngay_bat_dau);\r\n        tvNgayKetThuc = view.findViewById(R.id.tv_ngay_ket_thuc);\r\n        tvTongLuong = view.findViewById(R.id.tv_tong_luong);\r\n        edtSoLuongUngVien = view.findViewById(R.id.edt_so_luong_ung_vien);\r\n        edtDiaChi = view.findViewById(R.id.edt_dia_chi_job);\r\n        spQuan = view.findViewById(R.id.sp_Quan);\r\n        spTP = view.findViewById(R.id.sp_TP);\r\n        btnAddJob = view.findViewById(R.id.btn_submit_add_job);\r\n\r\n        edtLuong.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n                if (editable.toString().equals(\"\") || edtThoiHan.getText().toString().equals(\"\")) {\r\n                    tvTongLuong.setText(\"0\");\r\n                } else {\r\n                    String result = (Integer.parseInt(editable.toString()) * Integer.parseInt(edtThoiHan.getText().toString())) + \"\";\r\n                    tvTongLuong.setText(result);\r\n                }\r\n            }\r\n        });\r\n\r\n        edtThoiHan.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n                if (editable.toString().equals(\"\") || edtLuong.getText().toString().equals(\"\")) {\r\n                    tvTongLuong.setText(\"0\");\r\n                } else {\r\n                    String result = (Integer.parseInt(editable.toString()) * Integer.parseInt(edtLuong.getText().toString())) + \"\";\r\n                    tvTongLuong.setText(result);\r\n                }\r\n            }\r\n        });\r\n\r\n        cbCo.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\r\n                if (b) {\r\n                    cbKhong.setChecked(false);\r\n                } else {\r\n                    cbKhong.setChecked(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        cbKhong.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\r\n            @Override\r\n            public void onCheckedChanged(CompoundButton compoundButton, boolean b) {\r\n                if (b) {\r\n                    cbCo.setChecked(false);\r\n                } else {\r\n                    cbCo.setChecked(true);\r\n                }\r\n            }\r\n        });\r\n\r\n        edtSoLuongUngVien.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {\r\n\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable editable) {\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setOnClick() {\r\n        tvNgayBatDau.setOnClickListener(this);\r\n        tvNgayKetThuc.setOnClickListener(this);\r\n        btnAddJob.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.tv_ngay_bat_dau:\r\n\r\n                final DatePickerDialog StartTime = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n                    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                        Calendar newDate = Calendar.getInstance();\r\n                        newDate.set(year, monthOfYear, dayOfMonth);\r\n\r\n                        SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT);\r\n                        dateFormat.setTimeZone(TimeZone.getTimeZone(\"EN\"));\r\n                        String date = dateFormat.format(newDate.getTime());\r\n                        tvNgayBatDau.setText(date);\r\n                    }\r\n                }, newCalendar.get(Calendar.YEAR), newCalendar.get(Calendar.MONTH), newCalendar.get(Calendar.DAY_OF_MONTH));\r\n                StartTime.show();\r\n                break;\r\n\r\n            case R.id.tv_ngay_ket_thuc:\r\n                final DatePickerDialog EndTime = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n                    public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                        Calendar newDate = Calendar.getInstance();\r\n                        newDate.set(year, monthOfYear, dayOfMonth);\r\n\r\n                        SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT);\r\n                        dateFormat.setTimeZone(TimeZone.getTimeZone(\"EN\"));\r\n                        String date = dateFormat.format(newDate.getTime());\r\n                        tvNgayKetThuc.setText(date);\r\n                    }\r\n                }, newCalendar.get(Calendar.YEAR), newCalendar.get(Calendar.MONTH), newCalendar.get(Calendar.DAY_OF_MONTH));\r\n                EndTime.show();\r\n                break;\r\n            case R.id.btn_submit_add_job:\r\n                addJob();\r\n                break;\r\n        }\r\n    }\r\n\r\n    void addJob() {\r\n        if (edtTitleJob.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập tên CV\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            tenCV = edtTitleJob.getText().toString();\r\n        }\r\n\r\n        if (edtDescriberJob.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập mô tả CV\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            motaCV = edtDescriberJob.getText().toString();\r\n        }\r\n\r\n        loaiCV = spLoaiCV.getSelectedItem().toString();\r\n\r\n        luong = 0;\r\n        if (Integer.parseInt(edtLuong.getText().toString()) == 0 || edtLuong.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập lương CV\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            luong = Integer.parseInt(edtLuong.getText().toString());\r\n        }\r\n\r\n        yeuCauKN = false;\r\n        if (cbCo.isChecked()) {\r\n            yeuCauKN = true;\r\n        } else {\r\n            yeuCauKN = false;\r\n        }\r\n\r\n        nganhNghe = spNganhNghe.getSelectedItem().toString();\r\n\r\n        thoiHan = 0;\r\n        if (Integer.parseInt(edtThoiHan.getText().toString()) == 0 || edtThoiHan.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập thời hạn CV\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            thoiHan = Integer.parseInt(edtThoiHan.getText().toString());\r\n        }\r\n\r\n        String ngayBatDau = tvNgayBatDau.getText().toString();\r\n        String ngayKetThuc = tvNgayKetThuc.getText().toString();\r\n\r\n        if (luong != 0 && thoiHan != 0) {\r\n            tongLuong = luong * thoiHan;\r\n        }\r\n\r\n        if (edtSoLuongUngVien.getText().toString().equals(\"\")) {\r\n            soLuongUngVien = 1;\r\n        } else {\r\n            soLuongUngVien = Integer.parseInt(edtSoLuongUngVien.getText().toString());\r\n        }\r\n\r\n        if (edtDiaChi.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập địa chỉ CV\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            diaChi = edtDiaChi.getText().toString();\r\n            String quan = spQuan.getSelectedItem().toString();\r\n            String tinh = spTP.getSelectedItem().toString();\r\n            diaChi = diaChi + \" \" + quan + \" \" + tinh;\r\n        }\r\n\r\n        if (!tenCV.equals(\"\") && !motaCV.equals(\"\") && luong != 0 && thoiHan != 0 && !diaChi.equals(\"\")) {\r\n            API api = retrofitClient.getClien().create(API.class);\r\n            api.createNewJob(endEmpId,\r\n                    tenCV,\r\n                    motaCV,\r\n                    luong,\r\n                    loaiCV,\r\n                    yeuCauKN,\r\n                    nganhNghe,\r\n                    ngayBatDau,\r\n                    ngayKetThuc,\r\n                    thoiHan,\r\n                    \"Open\",\r\n                    tongLuong,\r\n                    soLuongUngVien,\r\n                    diaChi, accessTokenDb).enqueue(new Callback<Void>() {\r\n                @Override\r\n                public void onResponse(Call<Void> call, Response<Void> response) {\r\n                    if (response.code() == 200) {\r\n                        Toast.makeText(getActivity(), \"Tạo công việc mới thành công\", Toast.LENGTH_SHORT).show();\r\n                        getActivity().getSupportFragmentManager().popBackStack();\r\n                    } else {\r\n                        Toast.makeText(getActivity(), \"Tạo công việc mới thất bại\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<Void> call, Throwable t) {\r\n                    Toast.makeText(getActivity(), \"Error\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public void getCity() {\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getCity().enqueue(new Callback<List<Location>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Location>> call, Response<List<Location>> response) {\r\n                locations = (ArrayList<Location>) response.body();\r\n\r\n                for (Location cc : locations) {\r\n                    province.add(cc.getTitle());\r\n                }\r\n\r\n                ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, province);\r\n                cc.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                //Setting the ArrayAdapter data on the Spinner\r\n                spTP.setAdapter(cc);\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Location>> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getDistrict(int idProvince) {\r\n        districts.clear();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getDistrict(idProvince).enqueue(new Callback<List<String>>() {\r\n            @Override\r\n            public void onResponse(Call<List<String>> call, Response<List<String>> response) {\r\n                List<String> strings = response.body();\r\n                districts.addAll(strings);\r\n                ArrayAdapter bb = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, districts);\r\n                bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                spQuan.setAdapter(bb);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<String>> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Fragment/AddJobFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Fragment/AddJobFragment.java	(date 1618571170022)
@@ -110,7 +110,7 @@
                 String tinh = spTP.getSelectedItem().toString();
                 for (Location location : locations) {
                     if (tinh.equals(location.getTitle())) {
-                        getDistrict(location.getID());
+                        getProvince(location.getID());
                         break;
                     }
                 }
@@ -368,7 +368,7 @@
 
     public void getCity() {
         API api = retrofitClient.getClien().create(API.class);
-        api.getCity().enqueue(new Callback<List<Location>>() {
+        api.getDistrict().enqueue(new Callback<List<Location>>() {
             @Override
             public void onResponse(Call<List<Location>> call, Response<List<Location>> response) {
                 locations = (ArrayList<Location>) response.body();
@@ -391,10 +391,10 @@
         });
     }
 
-    private void getDistrict(int idProvince) {
+    private void getProvince(int idProvince) {
         districts.clear();
         API api = retrofitClient.getClien().create(API.class);
-        api.getDistrict(idProvince).enqueue(new Callback<List<String>>() {
+        api.getProvince(idProvince).enqueue(new Callback<List<String>>() {
             @Override
             public void onResponse(Call<List<String>> call, Response<List<String>> response) {
                 List<String> strings = response.body();
Index: app/src/main/java/vn/com/gojobs/Employer/ProfileEmployerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Employer;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Matrix;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.FileProvider;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.Model.Employer;\r\nimport vn.com.gojobs.Model.Location;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.dialog.CaptureDialog;\r\nimport vn.com.gojobs.dialog.CustomProgressBar;\r\nimport vn.com.gojobs.interfake.API;\r\nimport vn.com.gojobs.interfake.OnImageCallback;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\nimport static com.facebook.internal.instrument.InstrumentUtility.deleteFile;\r\nimport static vn.com.gojobs.Employer.LoginEmployerFragment._id;\r\n\r\npublic class ProfileEmployerFragment extends Fragment implements View.OnClickListener, OnImageCallback {\r\n\r\n    private Spinner spQuan, spTP;\r\n    String endEmpId;\r\n    Button employerProfileFragment_btnFinish;\r\n    ImageView employerProfileFragment_civProfile;\r\n    EditText employerProfileFragment_edtEmail, employerProfileFragment_edtEmployerName, employerProfileFragment_edtPhone,\r\n            edt_dia_chi_employer, employerProfileFragment_edtTaxCode, employerProfileFragment_edtDescription;\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    Uri selectedImage;\r\n    byte[] array;\r\n    private OnImageCallback onImageCallback;\r\n    CustomProgressBar customProgressBar;\r\n    private static File mFileName;\r\n    private static Bitmap bitmap;\r\n    private static boolean isCapture = false;\r\n    private static boolean isGallery = false;\r\n    private FragmentTransaction fragmentTransaction;\r\n    String accessTokenDb;\r\n    private static Bitmap avatar;\r\n\r\n    public final int REQUEST_IMAGE_CAPTURE = 1;\r\n    public final int REQUEST_IMAGE_GALLERY = 2;\r\n    private String avatarUser;\r\n    private boolean isDone = false;\r\n    private boolean isHasAvatar = false;\r\n\r\n    public ProfileEmployerFragment() {\r\n        this.onImageCallback = this;\r\n        // Required empty public constructor\r\n    }\r\n\r\n    public String getFileName() {\r\n        return mFileName.getPath();\r\n    }\r\n\r\n    public OnImageCallback setImageCallback() {\r\n        return onImageCallback;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View view = inflater.inflate(R.layout.fragment_employer_profile, null);\r\n        customProgressBar = new CustomProgressBar(getActivity());\r\n        mapItem(view);\r\n\r\n        if (_id != null) {\r\n            endEmpId = _id;\r\n            accessTokenDb = LoginEmployerFragment.accessTokenDb;\r\n        } else {\r\n            endEmpId = AuthActivity.empId;\r\n            accessTokenDb = AuthActivity.accessTokenDbEmp;\r\n        }\r\n\r\n        getProvine();\r\n        employerDetail();\r\n\r\n        spTP.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                getDistrict(spTP.getSelectedItemPosition() + 1);\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n\r\n            }\r\n        });\r\n\r\n        return view;\r\n    }\r\n\r\n    private void mapItem(View view) {\r\n        spTP = view.findViewById(R.id.sp_TP);\r\n        spQuan = view.findViewById(R.id.sp_Quan);\r\n        employerProfileFragment_civProfile = view.findViewById(R.id.img_avatar_employer);\r\n        employerProfileFragment_civProfile.setOnClickListener(this);\r\n        employerProfileFragment_btnFinish = view.findViewById(R.id.employerProfileFragment_btnFinish);\r\n        employerProfileFragment_btnFinish.setOnClickListener(this);\r\n        employerProfileFragment_edtEmail = view.findViewById(R.id.employerProfileFragment_edtEmail);\r\n        employerProfileFragment_edtEmployerName = view.findViewById(R.id.employerProfileFragment_edtEmployerName);\r\n        employerProfileFragment_edtPhone = view.findViewById(R.id.employerProfileFragment_edtPhone);\r\n        edt_dia_chi_employer = view.findViewById(R.id.edt_dia_chi_employer);\r\n        employerProfileFragment_edtTaxCode = view.findViewById(R.id.employerProfileFragment_edtTaxCode);\r\n        employerProfileFragment_edtDescription = view.findViewById(R.id.employerProfileFragment_edtDescription);\r\n    }\r\n\r\n    private void employerDetail() {\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getProfileEmployer(endEmpId, accessTokenDb).enqueue(new Callback<Employer>() {\r\n            @Override\r\n            public void onResponse(Call<Employer> call, Response<Employer> response) {\r\n                Employer employer = response.body();\r\n\r\n                if (employer != null) {\r\n\r\n                    String avatar = employer.getEmpLogo();\r\n                    avatarUser = avatar;\r\n                    if (avatar != null && !avatar.equals(\"\")) {\r\n                        isHasAvatar = true;\r\n                        // parse base64 to bitmap (param : avataruser:  Result : String base 64 to bitmap)\r\n                        byte[] decodedString = Base64.decode(avatar, Base64.DEFAULT);\r\n                        Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);\r\n\r\n                        employerProfileFragment_civProfile.setImageBitmap(decodedByte);\r\n                    } else {\r\n                        employerProfileFragment_civProfile.setImageDrawable(getActivity().getDrawable(R.drawable.avatar_logo));\r\n                    }\r\n\r\n                    employerProfileFragment_edtEmail.setText(employer.getEmpEmail());\r\n                    employerProfileFragment_edtEmployerName.setText(employer.getEmpName());\r\n                    employerProfileFragment_edtPhone.setText(employer.getEmpPhone());\r\n                    edt_dia_chi_employer.setText(employer.getEmpAddress());\r\n                    employerProfileFragment_edtTaxCode.setText(employer.getEmpTaxCode());\r\n                    employerProfileFragment_edtDescription.setText(employer.getEmpDescription());\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Employer> call, Throwable t) {\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    void updateInfoEmp() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        String diaChiEmp = \" ,\" + spQuan.getSelectedItem().toString() + \", \" + spTP.getSelectedItem().toString();\r\n\r\n        api.updatedEmployerInfo(avatarUser + \"\",\r\n                employerProfileFragment_edtEmployerName.getText().toString(),\r\n                employerProfileFragment_edtPhone.getText().toString(),\r\n                edt_dia_chi_employer.getText().toString() + \"\",\r\n                employerProfileFragment_edtDescription.getText().toString(),\r\n                employerProfileFragment_edtTaxCode.getText().toString(),\r\n                endEmpId,\r\n                accessTokenDb).enqueue(new Callback<Employer>() {\r\n            @Override\r\n            public void onResponse(Call<Employer> call, Response<Employer> response) {\r\n\r\n                if (response.code() == 200) {\r\n                    customProgressBar.dismiss();\r\n                    Toast.makeText(getActivity(), \"Cập nhật thông tin thành công.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Employer> call, Throwable t) {\r\n\r\n                Toast.makeText(getActivity(), \"Cập nhật thất bại.\", Toast.LENGTH_SHORT).show();\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getDistrict(int ID) {\r\n        customProgressBar.show();\r\n        final ArrayList<String> districts = new ArrayList<>();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getDistrict(ID).enqueue(new Callback<List<String>>() {\r\n            @Override\r\n            public void onResponse(Call<List<String>> call, Response<List<String>> response) {\r\n                List<String> strings = response.body();\r\n                if (strings != null) {\r\n                    districts.addAll(strings);\r\n                    ArrayAdapter bb = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, districts);\r\n                    bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    //Setting the ArrayAdapter data on the Spinner\r\n                    spQuan.setAdapter(bb);\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<String>> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void getProvine() {\r\n        customProgressBar.show();\r\n        final List<String> locations = new ArrayList<>();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getCity().enqueue(new Callback<List<Location>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Location>> call, Response<List<Location>> response) {\r\n                List<Location> locations1 = response.body();\r\n                if (locations1 != null) {\r\n                    for (int i = 0; i < locations1.size(); i++) {\r\n                        Location location = locations1.get(i);\r\n                        locations.add(location.getTitle());\r\n                    }\r\n                    ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, locations);\r\n                    cc.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    //Setting the ArrayAdapter data on the Spinner\r\n                    spTP.setAdapter(cc);\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Location>> call, Throwable t) {\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (isGallery) {\r\n            employerProfileFragment_civProfile.setImageBitmap(bitmap);\r\n            avatar = bitmap;\r\n            isGallery = false;\r\n            bitmap = null;\r\n        } else if (isCapture) {\r\n            employerProfileFragment_civProfile.setImageBitmap(bitmap);\r\n            avatar = bitmap;\r\n            isCapture = false;\r\n            bitmap = null;\r\n        }\r\n        new MyThread().start();\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.employerProfileFragment_btnFinish:\r\n\r\n                if (isDone || isHasAvatar) {\r\n                    updateInfoEmp();\r\n                    employerProfileFragment_btnFinish.setEnabled(false);\r\n                    Handler handler = new Handler();\r\n                    handler.postDelayed(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            employerProfileFragment_btnFinish.setEnabled(true);\r\n                        }\r\n                    }, 3000);\r\n                    break;\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Vui lòng đợi trong giây lát.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                break;\r\n            case R.id.img_avatar_employer:\r\n\r\n                AuthActivity.takeFrom = \"employer\";\r\n                fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\r\n                CaptureDialog captureDialog = new CaptureDialog(this);\r\n                captureDialog.show(fragmentTransaction, CaptureDialog.TAG);\r\n                break;\r\n        }\r\n    }\r\n\r\n    private Bitmap rotateImage(Bitmap source, float angle) {\r\n        Matrix matrix = new Matrix();\r\n        matrix.postRotate(angle);\r\n        return Bitmap.createBitmap(source, 0, 0, source.getWidth(), source.getHeight(),\r\n                matrix, true);\r\n    }\r\n\r\n    @Override\r\n    public void takePicture() {\r\n        dispatchTakePictureIntent();\r\n    }\r\n\r\n    private File createImageFile(Context context) {\r\n        // Create an image file name\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        String imageFileName = timeStamp;\r\n        File storageDir = context.getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n        File image = null;\r\n        try {\r\n            image = File.createTempFile(\r\n                    imageFileName,  /* prefix */\r\n                    \".jpg\",         /* suffix */\r\n                    storageDir     /* directory */\r\n            );\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        mFileName = image;\r\n        Log.d(\"TAG\", \"createImageFile: \" + mFileName);\r\n        return image;\r\n    }\r\n\r\n    @SuppressLint(\"RestrictedApi\")\r\n    private void dispatchTakePictureIntent() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        if (takePictureIntent.resolveActivity(getActivity().getPackageManager()) != null) {\r\n            File photoFile = null;\r\n            photoFile = createImageFile(getContext());\r\n\r\n            if (photoFile != null) {\r\n                Uri photoURI = FileProvider.getUriForFile(getContext(), getContext().getPackageName() + \".provider\", photoFile);\r\n                deleteFile(photoFile.getName());\r\n                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, photoURI);\r\n                getActivity().startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n                photoFile.deleteOnExit();\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void takeGallery() {\r\n        Intent intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n        intent.setType(\"image/*\");\r\n        getActivity().startActivityForResult(intent, REQUEST_IMAGE_GALLERY);\r\n    }\r\n\r\n    private class MyThread extends Thread {\r\n        @Override\r\n        public void run() {\r\n            //TODO\r\n            avatarUser = \"\";\r\n\r\n            if (avatar != null) {\r\n\r\n                Bitmap resized = Bitmap.createScaledBitmap(avatar, (int) (avatar.getWidth() * 0.5), (int) (avatar.getHeight() * 0.5), true);\r\n\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                resized.compress(Bitmap.CompressFormat.JPEG, 50, byteArrayOutputStream);\r\n                byte[] byteArray = byteArrayOutputStream.toByteArray();\r\n\r\n                avatarUser = Base64.encodeToString(byteArray, Base64.DEFAULT);\r\n\r\n                isDone = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onImageCallback(int requestCode, int resultCode, @Nullable Intent data) {\r\n        Log.d(\"test\", \"onImageCallback: into image call back\");\r\n\r\n        if (requestCode == REQUEST_IMAGE_CAPTURE) {\r\n            if (resultCode == RESULT_OK) {\r\n\r\n                isCapture = true;\r\n                bitmap = null;\r\n\r\n                String s = getFileName();\r\n                Bitmap bm = BitmapFactory.decodeFile(s);\r\n                Matrix matrix = new Matrix();\r\n                matrix.postRotate(0);\r\n\r\n                ExifInterface ei = null;\r\n                int orientation = 0;\r\n                try {\r\n                    ei = new ExifInterface(s);\r\n                    orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION,\r\n                            ExifInterface.ORIENTATION_UNDEFINED);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                switch (orientation) {\r\n\r\n                    case ExifInterface.ORIENTATION_ROTATE_90:\r\n                        bm = rotateImage(bm, 90);\r\n                        break;\r\n\r\n                    case ExifInterface.ORIENTATION_ROTATE_180:\r\n                        bm = rotateImage(bm, 180);\r\n                        break;\r\n\r\n                    case ExifInterface.ORIENTATION_ROTATE_270:\r\n                        bm = rotateImage(bm, 270);\r\n                        break;\r\n\r\n                    case ExifInterface.ORIENTATION_NORMAL:\r\n                    default:\r\n                        bm = bm;\r\n                        break;\r\n                }\r\n                Bitmap rotatedBitmap = Bitmap.createBitmap(bm, 0, 0, bm.getWidth(), bm.getHeight(), matrix, true);\r\n                bitmap = rotatedBitmap;\r\n\r\n            } else {\r\n                isCapture = false;\r\n            }\r\n\r\n        } else if (requestCode == REQUEST_IMAGE_GALLERY) {\r\n            if (resultCode == RESULT_OK) {\r\n                isGallery = true;\r\n                bitmap = null;\r\n\r\n                try {\r\n                    selectedImage = data.getData();\r\n\r\n                    Context context = AuthActivity.getContextApplication();\r\n                    bitmap = MediaStore.Images.Media.getBitmap(context.getContentResolver(), selectedImage);\r\n\r\n                } catch (IOException exception) {\r\n                    exception.printStackTrace();\r\n                }\r\n            } else {\r\n                isGallery = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRemove() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n            employerProfileFragment_civProfile.setImageDrawable(getActivity().getDrawable(R.drawable.avatar_logo));\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Employer/ProfileEmployerFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Employer/ProfileEmployerFragment.java	(date 1618571170020)
@@ -58,7 +58,7 @@
 
 public class ProfileEmployerFragment extends Fragment implements View.OnClickListener, OnImageCallback {
 
-    private Spinner spQuan, spTP;
+    private Spinner spQuan, spDistrict;
     String endEmpId;
     Button employerProfileFragment_btnFinish;
     ImageView employerProfileFragment_civProfile;
@@ -82,6 +82,8 @@
     private String avatarUser;
     private boolean isDone = false;
     private boolean isHasAvatar = false;
+    final List<String> districts = new ArrayList<>();
+    final ArrayList<String> province = new ArrayList<>();
 
     public ProfileEmployerFragment() {
         this.onImageCallback = this;
@@ -111,13 +113,13 @@
             accessTokenDb = AuthActivity.accessTokenDbEmp;
         }
 
-        getProvine();
+        getDistrict();
         employerDetail();
 
-        spTP.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+        spDistrict.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {
-                getDistrict(spTP.getSelectedItemPosition() + 1);
+                getProvince(spDistrict.getSelectedItemPosition() + 1);
             }
 
             @Override
@@ -130,7 +132,7 @@
     }
 
     private void mapItem(View view) {
-        spTP = view.findViewById(R.id.sp_TP);
+        spDistrict = view.findViewById(R.id.sp_TP);
         spQuan = view.findViewById(R.id.sp_Quan);
         employerProfileFragment_civProfile = view.findViewById(R.id.img_avatar_employer);
         employerProfileFragment_civProfile.setOnClickListener(this);
@@ -171,6 +173,28 @@
                     employerProfileFragment_edtEmployerName.setText(employer.getEmpName());
                     employerProfileFragment_edtPhone.setText(employer.getEmpPhone());
                     edt_dia_chi_employer.setText(employer.getEmpAddress());
+
+                    if (employer.getEmpAddress().contains(",")) {
+                        edt_dia_chi_employer.setText(employer.getEmpAddress().substring(0, employer.getEmpAddress().indexOf(",")));
+                    } else {
+                        edt_dia_chi_employer.setText(employer.getEmpAddress());
+                    }
+
+                    String quan = employer.getEmpAddress().substring(employer.getEmpAddress().indexOf(",") + 2,employer.getEmpAddress().indexOf(",",employer.getEmpAddress().indexOf(",") + 1)).trim();
+                    String tinh = employer.getEmpAddress().substring(employer.getEmpAddress().indexOf(",",employer.getEmpAddress().indexOf(",") + 1) + 2).trim();
+
+                    for (int i = 0; i < districts.size(); i++){
+                        if (districts.get(i).equals(tinh)){
+                            spDistrict.setSelection(i);
+                        }
+                    }
+
+                    for (int i = 0; i < province.size(); i++){
+                        if (province.get(i).equals(quan)){
+                            spQuan.setSelection(i);
+                        }
+                    }
+
                     employerProfileFragment_edtTaxCode.setText(employer.getEmpTaxCode());
                     employerProfileFragment_edtDescription.setText(employer.getEmpDescription());
                 }
@@ -188,7 +212,12 @@
 
         customProgressBar.show();
         API api = retrofitClient.getClien().create(API.class);
-        String diaChiEmp = " ," + spQuan.getSelectedItem().toString() + ", " + spTP.getSelectedItem().toString();
+
+        String empName = employerProfileFragment_edtEmployerName.getText().toString();
+        String empsdt = employerProfileFragment_edtPhone.getText().toString();
+        String empMota = employerProfileFragment_edtDescription.getText().toString();
+        String empTaxCode = employerProfileFragment_edtTaxCode.getText().toString();
+        String empDes = employerProfileFragment_edtDescription.getText().toString();
 
         api.updatedEmployerInfo(avatarUser + "",
                 employerProfileFragment_edtEmployerName.getText().toString(),
@@ -217,17 +246,17 @@
 
     }
 
-    private void getDistrict(int ID) {
+    private void getProvince(int ID) {
         customProgressBar.show();
-        final ArrayList<String> districts = new ArrayList<>();
+        province.clear();
         API api = retrofitClient.getClien().create(API.class);
-        api.getDistrict(ID).enqueue(new Callback<List<String>>() {
+        api.getProvince(ID).enqueue(new Callback<List<String>>() {
             @Override
             public void onResponse(Call<List<String>> call, Response<List<String>> response) {
                 List<String> strings = response.body();
                 if (strings != null) {
-                    districts.addAll(strings);
-                    ArrayAdapter bb = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, districts);
+                    province.addAll(strings);
+                    ArrayAdapter bb = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, province);
                     bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                     //Setting the ArrayAdapter data on the Spinner
                     spQuan.setAdapter(bb);
@@ -244,23 +273,23 @@
 
     }
 
-    private void getProvine() {
+    private void getDistrict() {
         customProgressBar.show();
-        final List<String> locations = new ArrayList<>();
+        districts.clear();
         API api = retrofitClient.getClien().create(API.class);
-        api.getCity().enqueue(new Callback<List<Location>>() {
+        api.getDistrict().enqueue(new Callback<List<Location>>() {
             @Override
             public void onResponse(Call<List<Location>> call, Response<List<Location>> response) {
                 List<Location> locations1 = response.body();
                 if (locations1 != null) {
                     for (int i = 0; i < locations1.size(); i++) {
                         Location location = locations1.get(i);
-                        locations.add(location.getTitle());
+                        districts.add(location.getTitle());
                     }
-                    ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, locations);
+                    ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, districts);
                     cc.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                     //Setting the ArrayAdapter data on the Spinner
-                    spTP.setAdapter(cc);
+                    spDistrict.setAdapter(cc);
                 }
                 customProgressBar.dismiss();
             }
Index: app/src/main/java/vn/com/gojobs/interfake/API.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.interfake;\r\n\r\nimport org.json.JSONArray;\r\n\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.http.DELETE;\r\nimport retrofit2.http.Field;\r\nimport retrofit2.http.FormUrlEncoded;\r\nimport retrofit2.http.GET;\r\nimport retrofit2.http.POST;\r\nimport retrofit2.http.PUT;\r\nimport retrofit2.http.Path;\r\nimport retrofit2.http.Query;\r\nimport vn.com.gojobs.Model.APIContract;\r\nimport vn.com.gojobs.Model.Contract;\r\nimport vn.com.gojobs.Model.Employer;\r\nimport vn.com.gojobs.Model.Feedback;\r\nimport vn.com.gojobs.Model.Follow;\r\nimport vn.com.gojobs.Model.Freelancer;\r\nimport vn.com.gojobs.Model.Job;\r\nimport vn.com.gojobs.Model.Location;\r\nimport vn.com.gojobs.Model.Message;\r\nimport vn.com.gojobs.Model.Notification;\r\nimport vn.com.gojobs.Model.Receipt;\r\nimport vn.com.gojobs.Model.RoomMessage;\r\nimport vn.com.gojobs.Model.Wallet;\r\n\r\npublic interface API {\r\n\r\n    //API register account employer\r\n    @FormUrlEncoded\r\n    @POST(\"/employer/register\")\r\n    Call<Void> empRegister(@Field(\"empEmail\") String empEmail, @Field(\"empPassword\") String empPassword, @Field(\"empTerm\") boolean empTerm);\r\n\r\n    //API login employer\r\n    @FormUrlEncoded\r\n    @POST(\"/employer/login\")\r\n    Call<Employer> empLogin(@Field(\"empEmail\") String empEmail, @Field(\"empPassword\") String empPassword, @Field(\"empTokenDevice\") String empTokenDevice);\r\n\r\n    //API register Freelancer\r\n    @FormUrlEncoded\r\n    @POST(\"/freelancer/flcRegister\")\r\n    Call<Void> flcRegister(@Field(\"flcEmail\") String flcEmail, @Field(\"flcPassword\") String flcPassword, @Field(\"flcTerm\") boolean flcTerm);\r\n\r\n    //API login Freelancer\r\n    @FormUrlEncoded\r\n    @POST(\"/freelancer/flcLogin\")\r\n    Call<Freelancer> flcLogin(@Field(\"flcEmail\") String flcEmail, @Field(\"flcPassword\") String flcPassword, @Field(\"flcTokenDevice\") String flcTokenDevice);\r\n\r\n    //API forgot password freelancer\r\n    @POST(\"sendMail/sendEmailRePasswordFlc\")\r\n    Call<Void> flcSendEmailRePassword(@Query(\"flcEmail\") String flcEmail);\r\n\r\n    //API forgot password emoloyer\r\n    @POST(\"sendMail/sendEmailRePasswordEmp\")\r\n    Call<Void> empSendEmailRePassword(@Query(\"empEmail\") String empEmail);\r\n\r\n    //API change password freelancer\r\n    @FormUrlEncoded\r\n    @PUT(\"freelancer/updatePassword\")\r\n    Call<Void> updatePasswordFlc(@Field(\"flcEmail\") String flcEmail,\r\n                                 @Field(\"flcPassword\") String flcPasswor,\r\n                                 @Field(\"flcNewPassword\") String flcNewPassword,\r\n                                 @Field(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get profile employer\r\n    @GET(\"employer/findEmployerById\")\r\n    Call<Employer> getProfileEmployer(@Query(\"_id\") String _id,\r\n                                      @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API update token device freelancer when logout\r\n    @PUT(\"freelancer/flcUpdateToken\")\r\n    Call<Void> flcUpdateTokenDevice(@Query(\"_id\") String _id,\r\n                                    @Query(\"flcTokenDevice\") String flcTokenDevice,\r\n                                    @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API change password employer\r\n    @FormUrlEncoded\r\n    @PUT(\"employer/updatePassword\")\r\n    Call<Void> updatePasswordEmp(@Field(\"empEmail\") String empEmail,\r\n                                 @Field(\"empPassword\") String empPassword,\r\n                                 @Field(\"empNewPassword\") String empNewPassword,\r\n                                 @Field(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API update token device freelancer when logout\r\n    @PUT(\"employer/empUpdateToken\")\r\n    Call<Void> empUpdateTokenDevice(@Query(\"_id\") String _id,\r\n                                    @Query(\"empTokenDevice\") String empTokenDevice,\r\n                                    @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API send OTP\r\n    @POST(\"otp/getOTP\")\r\n    Call<Void> getOTP(@Query(\"phone\") String phone,\r\n                      @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API verify OTP\r\n    @POST(\"otp/verifyOTP\")\r\n    Call<Void> verifyOTP(@Query(\"phone\") String phone,\r\n                         @Query(\"code\") String code,\r\n                         @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API create new Job\r\n    @POST(\"job/createNewJob\")\r\n    Call<Void> createNewJob(@Query(\"empId\") String empId,\r\n                            @Query(\"jobTitle\") String jobTitle,\r\n                            @Query(\"jobDescription\") String jobDescription,\r\n                            @Query(\"jobSalary\") int jobSalary,\r\n                            @Query(\"jobPaymentType\") String jobPaymentType,\r\n                            @Query(\"experienceRequired\") boolean experienceRequired,\r\n                            @Query(\"jobField\") String jobField,\r\n                            @Query(\"jobStart\") String jobStart,\r\n                            @Query(\"jobEnd\") String jobEnd,\r\n                            @Query(\"jobDuration\") int jobDuration,\r\n                            @Query(\"jobStatus\") String jobStatus,\r\n                            @Query(\"jobTotalSalaryPerHeadCount\") int jobTotalSalaryPerHeadCount,\r\n                            @Query(\"jobHeadCountTarget\") int jobHeadCountTarget,\r\n                            @Query(\"jobAddress\") String jobAddress,\r\n                            @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job with time create\r\n    @GET(\"job/jobPaginationWithTime\")\r\n    Call<List<Job>> getJobWithTime(@Query(\"sort\") String sort,\r\n                                   @Query(\"pageNumber\") int pageNumber,\r\n                                   @Query(\"pageSize\") int pageSize,\r\n                                   @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job with filter\r\n    @GET(\"job/jobPagination\")\r\n    Call<List<Job>> getJobWithFilter(\r\n            @Query(\"sort\") String sort,\r\n            @Query(\"filter\") List<String> filter,\r\n            @Query(\"pageNumber\") int pageNumber,\r\n            @Query(\"pageSize\") int pageSize,\r\n            @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job with search\r\n    @GET(\"job/jobPagination\")\r\n    Call<List<Job>> getJobWithSearch(@Query(\"search\") String search,\r\n                                     @Query(\"sort\") String sort,\r\n                                     @Query(\"pageNumber\") int pageNumber,\r\n                                     @Query(\"pageSize\") int pageSize,\r\n                                     @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job with address\r\n    @GET(\"job/jobPaginationWithAddress\")\r\n    Call<List<Job>> getJobWithAddress(@Query(\"sort\") String sort,\r\n                                      @Query(\"search\") String search,\r\n                                      @Query(\"pageNumber\") int pageNumber,\r\n                                      @Query(\"pageSize\") int pageSize,\r\n                                      @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job by empId and contractStatus\r\n    @GET(\"contract/getJobByContractStatus\")\r\n    Call<List<Job>> getJobByContractStatus(@Query(\"userId\") String userId,\r\n                                           @Query(\"contractStatus\") String contractStatus,\r\n                                           @Query(\"pageNumber\") int pageNumber,\r\n                                           @Query(\"pageSize\") int pageSize,\r\n                                           @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get contract by jobId\r\n    @GET(\"contract/getContractByJobId\")\r\n    Call<List<Contract>> getContractByJobId(@Query(\"jobId\") String jobId,\r\n                                            @Query(\"contractStatus\") String contractStatus,\r\n                                            @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    @GET(\"job/allJobsByEmpId\")\r\n    Call<List<Job>> getJobByEmpId(@Query(\"empId\") String empId,\r\n                                  @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get freelancer with rating\r\n    @GET(\"freelancer/flcPaginationAll\")\r\n    Call<List<Freelancer>> getFlcPaginationAll(@Query(\"sort\") String sort,\r\n                                               @Query(\"pageNumber\") int pageNumber,\r\n                                               @Query(\"pageSize\") int pageSize,\r\n                                               @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    @GET(\"freelancer/flcPaginationWithAddress\")\r\n    Call<List<Freelancer>> getFlcPaginationWithAddress(@Query(\"search\") String search,\r\n                                                       @Query(\"sort\") String sort,\r\n                                                       @Query(\"pageNumber\") int pageNumber,\r\n                                                       @Query(\"pageSize\") int pageSize,\r\n                                                       @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get freelancer with filter address\r\n    @GET(\"freelancer/flcPaginations\")\r\n    Call<List<Freelancer>> getFlcPaginations(@Query(\"search\") String search,\r\n                                             @Query(\"sort\") String sort,\r\n                                             @Query(\"pageNumber\") int pageNumber,\r\n                                             @Query(\"pageSize\") int pageSize,\r\n                                             @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get profile freelancer\r\n    @GET(\"freelancer/flcProfile\")\r\n    Call<Freelancer> getFlcProfile(@Query(\"_id\") String _id,\r\n                                   @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get location city\r\n    @GET(\"location/city\")\r\n    Call<List<Location>> getCity();\r\n\r\n    //API get location district in city\r\n    @GET(\"location/city/{id}/district\")\r\n    Call<List<String>> getDistrict(@Path(\"id\") int ID);\r\n\r\n    //API update info freelancer\r\n    @FormUrlEncoded\r\n    @POST(\"freelancer/flcUpdatedInfo\")\r\n    Call<Freelancer> flcUpdateInfo(@Field(\"flcName\") String flcName,\r\n                                   @Field(\"flcPhone\") String flcPhone,\r\n                                   @Field(\"_id\") String _id,\r\n                                   @Field(\"flcBirthday\") String flcBirthday,\r\n                                   @Field(\"flcAvatar\") String flcAvatar,\r\n                                   @Field(\"flcSex\") String flcSex,\r\n                                   @Field(\"flcAddress\") String flcAddress,\r\n                                   @Field(\"flcEdu\") String flcEdu,\r\n                                   @Field(\"flcMajor\") String flcMajor,\r\n                                   @Field(\"flcLanguages\") String flcLanguages,\r\n                                   @Field(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"employer/updatedEmployerInfo\")\r\n    Call<Employer> updatedEmployerInfo(@Field(\"empLogo\") String empLogo,\r\n                                       @Field(\"empName\") String empName,\r\n                                       @Field(\"empPhone\") String empPhone,\r\n                                       @Field(\"empAddress\") String empAddress,\r\n                                       @Field(\"empDescription\") String empDescription,\r\n                                       @Field(\"empTaxCode\") String empTaxCode,\r\n                                       @Field(\"_id\") String _id,\r\n                                       @Field(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get notification for freelancer\r\n    @GET(\"notification/getNotification\")\r\n    Call<List<Notification>> getNotificationFlc(@Query(\"flcId\") String flcId,\r\n                                                @Query(\"pageNumber\") int pageNumber,\r\n                                                @Query(\"pageSize\") int pageSize,\r\n                                                @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get notification for employer\r\n    @GET(\"notification/getNotificationForEmp\")\r\n    Call<List<Notification>> getNotificationForEmp(@Query(\"empId\") String empId,\r\n                                                   @Query(\"pageNumber\") int pageNumber,\r\n                                                   @Query(\"pageSize\") int pageSize,\r\n                                                   @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get Job Detail with notification\r\n    @GET(\"job/jobDetail\")\r\n    Call<List<Job>> getJobDetail(@Query(\"_id\") String _id,\r\n                                 @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    @POST(\"contract/createNewContract\")\r\n    Call<Void> createContractByFreelancer(@Query(\"jobId\") String jobId,\r\n                                          @Query(\"flcId\") String flcId,\r\n                                          @Query(\"jobTotalSalaryPerHeadCount\") String jobTotalSalaryPerHeadCount,\r\n                                          @Query(\"contractStatus\") String contracStatus,\r\n                                          @Query(\"empId\") String empId,\r\n                                          @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API delete contract by freelancer\r\n    @DELETE(\"contract/deteledContract\")\r\n    Call<Void> deleteContractById(@Query(\"_id\") String _id,\r\n                                  @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API new room chat\r\n    @FormUrlEncoded\r\n    @POST(\"message/newMessage\")\r\n    Call<RoomMessage> newMessage(@Field(\"empId\") String empId,\r\n                                 @Field(\"flcId\") String flcId,\r\n                                 @Field(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API new message\r\n    @FormUrlEncoded\r\n    @POST(\"message/newMessage\")\r\n    Call<Void> newMessage1(@Field(\"empId\") String empId,\r\n                           @Field(\"flcId\") String flcId,\r\n                           @Field(\"mess\") JSONArray mess,\r\n                           @Field(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get message notification by flc\r\n    @GET(\"message/getNotificationMessageByFlc\")\r\n    Call<List<Message>> getMessageNotificationByFlc(@Query(\"flcId\") String flcId,\r\n                                                    @Query(\"pageNumber\") int pageNumber,\r\n                                                    @Query(\"pageSize\") int pageSize,\r\n                                                    @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get message notification by emp\r\n    @GET(\"message/getNotificationMessageByEmp\")\r\n    Call<List<Message>> getMessageNotificationByEmp(@Query(\"empId\") String empId,\r\n                                                    @Query(\"pageNumber\") int pageNumber,\r\n                                                    @Query(\"pageSize\") int pageSize,\r\n                                                    @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get message detail\r\n    @GET(\"message/getMessageDetail\")\r\n    Call<Message> getMessageDetail(@Query(\"_id\") String _id,\r\n                                   @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer create feedback\r\n    @POST(\"feedback/createEmpFeedback\")\r\n    Call<Void> createEmpfeedback(@Query(\"empId\") String empId,\r\n                                 @Query(\"flcId\") String flcId,\r\n                                 @Query(\"jobId\") String jobId,\r\n                                 @Query(\"starRating\") float starRating,\r\n                                 @Query(\"comment\") String comment,\r\n                                 @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API freelancer create feedback\r\n    @POST(\"feedback/createFlcFeedback\")\r\n    Call<Void> createFlcfeedback(@Query(\"empId\") String empId,\r\n                                 @Query(\"flcId\") String flcId,\r\n                                 @Query(\"jobId\") String jobId,\r\n                                 @Query(\"starRating\") int starRating,\r\n                                 @Query(\"commnent\") String commnent,\r\n                                 @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get feedback by freelancer\r\n    @GET(\"feedback/getFeedbackByFlc\")\r\n    Call<List<Feedback>> getFeedbackByFlc(@Query(\"flcId\") String flcId,\r\n                                          @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get feedback by employer\r\n    @GET(\"feedback/getFeedbackByEmp\")\r\n    Call<List<Feedback>> getFeedbackByEmp(@Query(\"empId\") String empId,\r\n                                          @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API freelancer follow employer\r\n    @POST(\"follow/createFlcFollowEmp\")\r\n    Call<Void> createFlcFollowEmp(@Query(\"flcId\") String flcId,\r\n                                  @Query(\"empId\") String empId,\r\n                                  @Query(\"createdBy\") String createdBy,\r\n                                  @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer follow freelancer\r\n    @POST(\"follow/createEmpFollowFlc\")\r\n    Call<Void> createEmpFollowFlc(@Query(\"flcId\") String flcId,\r\n                                  @Query(\"empId\") String empId,\r\n                                  @Query(\"createdBy\") String createdBy,\r\n                                  @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API freelancer follow job\r\n    @POST(\"follow/createFlcFollowJob\")\r\n    Call<Void> createFlcFollowJob(@Query(\"flcId\") String flcId,\r\n                                  @Query(\"jobId\") String jobId,\r\n                                  @Query(\"createdBy\") String createdBy,\r\n                                  @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job by freelancer follow\r\n    @GET(\"follow/getJobByFlcFollow\")\r\n    Call<List<Follow>> getJobByFlcFollow(@Query(\"flcId\") String flcId,\r\n                                         @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job by freelancer follow\r\n    @GET(\"job/fieldForSearch\")\r\n    Call<List<String>> getFieldForSearch(@Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get job by freelancer follow\r\n    @GET(\"job/getFieldForSearchFlc\")\r\n    Call<List<String>> getFieldForSearchFlc(@Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get freelancer by employer follow\r\n    @GET(\"follow/getFlcByEmpFollow\")\r\n    Call<List<Follow>> getFlcByEmpFollow(@Query(\"empId\") String empId,\r\n                                         @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get employer by freelancer follow\r\n    @GET(\"follow/getEmpByFlcFollow\")\r\n    Call<List<Follow>> getEmpByFlcFollow(@Query(\"flcId\") String flcId,\r\n                                         @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API freelancer del follow employer\r\n    @DELETE(\"follow/delFollow\")\r\n    Call<Void> delFollowEmpByFlc(@Query(\"empId\") String empId,\r\n                                 @Query(\"flcId\") String flcId,\r\n                                 @Query(\"createdBy\") String freelancerName,\r\n                                 @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer del follow freelancer\r\n    @DELETE(\"follow/delFollow\")\r\n    Call<Void> delFollowFlcByEmp(@Query(\"empId\") String empId,\r\n                                 @Query(\"flcId\") String flcId,\r\n                                 @Query(\"createdBy\") String employerName,\r\n                                 @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API freelancer del follow job\r\n    @DELETE(\"follow/delFollow\")\r\n    Call<Void> delFollowJobByFlc(@Query(\"jobId\") String jobId,\r\n                                 @Query(\"flcId\") String flcId,\r\n                                 @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get wallet for employer and freelancer\r\n    @GET(\"wallet/getWalletByEndUserId\")\r\n    Call<Wallet> getWalletByEndUserId(@Query(\"_id\") String _id,\r\n                                      @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API get receipt history by id\r\n    @GET(\"receipt/getReceiptHistory\")\r\n    Call<List<Receipt>> getReceiptHistory(@Query(\"_id\") String _id,\r\n                                          @Query(\"pageNumber\") int pageNumber,\r\n                                          @Query(\"pageSize\") int pageSize,\r\n                                          @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer accepte freelancer\r\n    @PUT(\"contract/updateContractStatusById\")\r\n    Call<Void> updateContractStatusACCEPTED(@Query(\"_id\") String _id,\r\n                                            @Query(\"contractStatus\") String contractStatus,\r\n                                            @Query(\"updatedBy\") String updatedBy,\r\n                                            @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer approve contract\r\n    @PUT(\"contract/updateContractStatusById\")\r\n    Call<Void> updateContractStatusAPPROVED(@Query(\"_id\") String _id,\r\n                                            @Query(\"contractStatus\") String contractStatus,\r\n                                            @Query(\"updatedBy\") String updatedBy,\r\n                                            @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer completed contract\r\n    @PUT(\"contract/markContractsCompleted\")\r\n    Call<List<APIContract>> updateContractStatusCOMPLETED(@Query(\"_idContractList\") String _idContractList,\r\n                                                          @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n    //API employer cancel contract\r\n    @PUT(\"contract/markOneContractCancelled\")\r\n    Call<Void> updateContractStatusCANCELLED(@Query(\"_idContractList\") String _idContractList,\r\n                                             @Query(\"accessTokenDb\") String accessTokenDb);\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/interfake/API.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/interfake/API.java	(date 1618571170031)
@@ -198,11 +198,11 @@
 
     //API get location city
     @GET("location/city")
-    Call<List<Location>> getCity();
+    Call<List<Location>> getDistrict();
 
     //API get location district in city
     @GET("location/city/{id}/district")
-    Call<List<String>> getDistrict(@Path("id") int ID);
+    Call<List<String>> getProvince(@Path("id") int ID);
 
     //API update info freelancer
     @FormUrlEncoded
Index: app/src/main/java/vn/com/gojobs/Employer/CVFreelancerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Employer;\r\n\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.os.Bundle;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.Fragment.ChatFragment;\r\nimport vn.com.gojobs.Model.Freelancer;\r\nimport vn.com.gojobs.Model.RoomMessage;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.dialog.CustomProgressBar;\r\nimport vn.com.gojobs.interfake.API;\r\n\r\npublic class CVFreelancerFragment extends Fragment implements View.OnClickListener {\r\n\r\n    public static final String TAG = \"CVFreelancerFragment\";\r\n    String idFreelancer;\r\n    ImageView img_avatar_freelancer;\r\n    TextView tvLienHe, tvLuuCV;\r\n    private FragmentManager fragmentManager;\r\n    EditText edt_name_freelancer, edt_email_freelancer, edt_sdt_freelancer, edt_hoc_van_freelancer, edt_nghe_nghiep_freelancer,\r\n            edt_trinh_do_ngoai_ngu_freelancer, edt_gioi_tinh_CV, edt_ngay_sinh_CV, edt_dia_chi_freelancer;\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    private String endEmpId;\r\n    String accessTokenDb;\r\n    CustomProgressBar customProgressBar;\r\n\r\n    public CVFreelancerFragment(String idFreelancer) {\r\n        // Required empty public constructor\r\n        this.idFreelancer = idFreelancer;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_c_v_freelancer, container, false);\r\n        init(view);\r\n        customProgressBar = new CustomProgressBar(getContext());\r\n\r\n        if (LoginEmployerFragment._id != null) {\r\n            endEmpId = LoginEmployerFragment._id;\r\n            accessTokenDb = LoginEmployerFragment.accessTokenDb;\r\n        } else {\r\n            endEmpId = AuthActivity.empId;\r\n            accessTokenDb = AuthActivity.accessTokenDbEmp;\r\n        }\r\n\r\n        freelancerDetail(idFreelancer);\r\n\r\n        return view;\r\n    }\r\n\r\n    void init(View view) {\r\n        img_avatar_freelancer = view.findViewById(R.id.img_avatar_freelancer);\r\n        tvLienHe = view.findViewById(R.id.tv_lien_he_cv);\r\n        tvLienHe.setOnClickListener(this);\r\n        tvLuuCV = view.findViewById(R.id.tv_luu_cv);\r\n        tvLuuCV.setOnClickListener(this);\r\n        edt_name_freelancer = view.findViewById(R.id.edt_name_freelancer);\r\n        edt_email_freelancer = view.findViewById(R.id.edt_email_freelancer);\r\n        edt_sdt_freelancer = view.findViewById(R.id.edt_sdt_freelancer);\r\n        edt_hoc_van_freelancer = view.findViewById(R.id.edt_hoc_van_freelancer);\r\n        edt_nghe_nghiep_freelancer = view.findViewById(R.id.edt_nghe_nghiep_freelancer);\r\n        edt_trinh_do_ngoai_ngu_freelancer = view.findViewById(R.id.edt_trinh_do_ngoai_ngu_freelancer);\r\n        edt_gioi_tinh_CV = view.findViewById(R.id.edt_gioi_tinh_CV);\r\n        edt_ngay_sinh_CV = view.findViewById(R.id.edt_ngay_sinh_CV);\r\n        edt_dia_chi_freelancer = view.findViewById(R.id.edt_dia_chi_freelancer);\r\n    }\r\n\r\n    private void freelancerDetail(String nameItem) {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getFlcProfile(nameItem + \"\", accessTokenDb + \"\").enqueue(new Callback<Freelancer>() {\r\n            @Override\r\n            public void onResponse(Call<Freelancer> call, Response<Freelancer> response) {\r\n                Freelancer freelancer = response.body();\r\n\r\n                if (freelancer != null) {\r\n                    if (freelancer.getFlcAvatar() != null) {\r\n                        String avatar = freelancer.getFlcAvatar();\r\n                        // parse base64 to bitmap (param : avataruser:  Result : String base 64 to bitmap)\r\n                        byte[] decodedString = Base64.decode(avatar, Base64.DEFAULT);\r\n                        Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);\r\n\r\n                        img_avatar_freelancer.setImageBitmap(decodedByte);\r\n                    }\r\n\r\n                    edt_name_freelancer.setText(freelancer.getFlcName());\r\n                    edt_email_freelancer.setText(freelancer.getFlcEmail());\r\n                    edt_sdt_freelancer.setText(freelancer.getFlcPhone() + \"\");\r\n                    edt_hoc_van_freelancer.setText(freelancer.getFlcEdu());\r\n                    edt_nghe_nghiep_freelancer.setText(freelancer.getFlcMajor());\r\n                    edt_trinh_do_ngoai_ngu_freelancer.setText(freelancer.getFlcLanguages());\r\n                    edt_gioi_tinh_CV.setText(freelancer.getFlcSex());\r\n                    edt_ngay_sinh_CV.setText(freelancer.getFlcBirthday());\r\n                    edt_dia_chi_freelancer.setText(freelancer.getFlcAddress());\r\n                }\r\n\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Freelancer> call, Throwable t) {\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.tv_lien_he_cv: //button back on left navigation\r\n                newChat();\r\n                break;\r\n\r\n            case R.id.tv_luu_cv:\r\n                customProgressBar.show();\r\n                API api = retrofitClient.getClien().create(API.class);\r\n                api.createEmpFollowFlc(idFreelancer + \"\",endEmpId + \"\",endEmpId + \"\",accessTokenDb + \"\").enqueue(new Callback<Void>() {\r\n                    @Override\r\n                    public void onResponse(Call<Void> call, Response<Void> response) {\r\n                        if (response.code() == 200){\r\n                            Toast.makeText(getActivity(), \"Lưu CV thành công.\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                        customProgressBar.dismiss();\r\n                    }\r\n\r\n                    @Override\r\n                    public void onFailure(Call<Void> call, Throwable t) {\r\n                        Toast.makeText(getActivity(), \"Lưu CV thất bại.\", Toast.LENGTH_SHORT).show();\r\n                        customProgressBar.dismiss();\r\n                    }\r\n                });\r\n                break;\r\n        }\r\n    }\r\n\r\n    private void newChat() {\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.newMessage(endEmpId + \"\", idFreelancer + \"\", accessTokenDb + \"\").enqueue(new Callback<RoomMessage>() {\r\n            @Override\r\n            public void onResponse(Call<RoomMessage> call, Response<RoomMessage> response) {\r\n                RoomMessage roomMessage = response.body();\r\n                LoginEmployerFragment._id = roomMessage.get_id();\r\n                if (LoginEmployerFragment._id != null) {\r\n                    fragmentManager = getFragmentManager();\r\n                    ChatFragment chatFragment = new ChatFragment(LoginEmployerFragment._id);\r\n                    fragmentManager.beginTransaction().replace(R.id.fl2, chatFragment).addToBackStack(ChatFragment.TAG).commit();\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<RoomMessage> call, Throwable t) {\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Employer/CVFreelancerFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Employer/CVFreelancerFragment.java	(date 1618571170016)
@@ -95,7 +95,7 @@
 
         customProgressBar.show();
         API api = retrofitClient.getClien().create(API.class);
-        api.getFlcProfile(nameItem + "", accessTokenDb + "").enqueue(new Callback<Freelancer>() {
+        api.getFlcProfile(nameItem + "", accessTokenDb).enqueue(new Callback<Freelancer>() {
             @Override
             public void onResponse(Call<Freelancer> call, Response<Freelancer> response) {
                 Freelancer freelancer = response.body();
@@ -141,7 +141,7 @@
             case R.id.tv_luu_cv:
                 customProgressBar.show();
                 API api = retrofitClient.getClien().create(API.class);
-                api.createEmpFollowFlc(idFreelancer + "",endEmpId + "",endEmpId + "",accessTokenDb + "").enqueue(new Callback<Void>() {
+                api.createEmpFollowFlc(idFreelancer + "",endEmpId + "",endEmpId + "",accessTokenDb).enqueue(new Callback<Void>() {
                     @Override
                     public void onResponse(Call<Void> call, Response<Void> response) {
                         if (response.code() == 200){
@@ -163,7 +163,7 @@
     private void newChat() {
         customProgressBar.show();
         API api = retrofitClient.getClien().create(API.class);
-        api.newMessage(endEmpId + "", idFreelancer + "", accessTokenDb + "").enqueue(new Callback<RoomMessage>() {
+        api.newMessage(endEmpId + "", idFreelancer + "", accessTokenDb).enqueue(new Callback<RoomMessage>() {
             @Override
             public void onResponse(Call<RoomMessage> call, Response<RoomMessage> response) {
                 RoomMessage roomMessage = response.body();
Index: app/src/main/java/vn/com/gojobs/Fragment/JobDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Fragment;\r\n\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Color;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.ScrollView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.CameraUpdateFactory;\r\nimport com.google.android.gms.maps.GoogleMap;\r\nimport com.google.android.gms.maps.OnMapReadyCallback;\r\nimport com.google.android.gms.maps.SupportMapFragment;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.maps.model.MarkerOptions;\r\nimport com.google.android.gms.maps.model.PolylineOptions;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.DirectionJSONParse;\r\nimport vn.com.gojobs.Employer.LoginEmployerFragment;\r\nimport vn.com.gojobs.Freelancer.LoginFreelancerFragment;\r\nimport vn.com.gojobs.Model.GojobConfig;\r\nimport vn.com.gojobs.Model.Job;\r\nimport vn.com.gojobs.Model.RoomMessage;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.dialog.CustomProgressBar;\r\nimport vn.com.gojobs.dialog.DialogTurnOnGPS;\r\nimport vn.com.gojobs.interfake.API;\r\nimport vn.com.gojobs.interfake.ITurnOnGPSCallback;\r\n\r\nimport static vn.com.gojobs.AuthActivity.flcId;\r\n\r\npublic class JobDetailFragment extends Fragment implements OnMapReadyCallback, ITurnOnGPSCallback, View.OnClickListener {\r\n\r\n    public static final String TAG = \"JobDescriptionFragment\";\r\n\r\n    private LocationManager locationManager;\r\n    private GoogleMap mMap;\r\n    private Location currentLocation;\r\n    private FusedLocationProviderClient mFusedLocationClient;\r\n    private FragmentTransaction fragmentTransaction;\r\n    private LinearLayout lnBtnSaveBookmark, lnBtnUngTuyen, lnBtnTheoDoi;\r\n    private ImageView imgSaveBookmark, imgUngTuyen;\r\n    private TextView tvSave, tvUngtuyen, tvLienHe, tvTheoDoi, tvTenNhaTuyenDung, tvDiaChi, tvTenCongViec;\r\n    int countSave = 0, countUngTuyen = 0, dem = 0;\r\n    private List<LatLng> listStep = new ArrayList<>();\r\n    ScrollView scrollView;\r\n    String endFlcId, _id, idJobs;\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    private FragmentManager fragmentManager;\r\n    private TextView tvMoTa, tvMucLuong, tvYeuCauKN, tvThoiGianBatDau, tvThoiGianKetThuc, tvHanNopHoSo;\r\n    private CustomProgressBar customProgressBar;\r\n    private String empId, empName, jobTotalSalary;\r\n    String accessTokenDb;\r\n    private ImageView imgEmpLogo;\r\n\r\n    public JobDetailFragment(String _id) {\r\n        this.idJobs = _id;\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View view = inflater.inflate(R.layout.fragment_job_detail, null);\r\n\r\n        customProgressBar = new CustomProgressBar(getContext());\r\n        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(getActivity());\r\n\r\n        imgEmpLogo = view.findViewById(R.id.ivJD_Avatar);\r\n        tvTenNhaTuyenDung = view.findViewById(R.id.tv_ten_nha_tuyen_dung);\r\n        tvDiaChi = view.findViewById(R.id.tv_dia_chi_job);\r\n        tvTenCongViec = view.findViewById(R.id.tv_ten_cong_viec);\r\n        tvMoTa = view.findViewById(R.id.tv_mo_ta_cong_viec);\r\n        tvMucLuong = view.findViewById(R.id.tv_muc_luong);\r\n        tvYeuCauKN = view.findViewById(R.id.tv_yeu_cau_kinh_nghiem_job_detail);\r\n        tvThoiGianBatDau = view.findViewById(R.id.tv_ngay_bat_dau_job_detail);\r\n        tvThoiGianKetThuc = view.findViewById(R.id.tv_ngay_ket_thuc_job_detail);\r\n        tvHanNopHoSo = view.findViewById(R.id.tv_han_nop);\r\n\r\n        lnBtnTheoDoi = view.findViewById(R.id.ln_btn_theo_doi);\r\n        tvTheoDoi = view.findViewById(R.id.tv_theo_doi);\r\n        tvLienHe = view.findViewById(R.id.tv_lien_he);\r\n        lnBtnSaveBookmark = view.findViewById(R.id.btnBookmarkJob);\r\n        lnBtnUngTuyen = view.findViewById(R.id.btnApplyJob);\r\n        imgSaveBookmark = view.findViewById(R.id.img_save_bookmark);\r\n        imgUngTuyen = view.findViewById(R.id.img_ungtuyen);\r\n        tvSave = view.findViewById(R.id.tv_save);\r\n        tvUngtuyen = view.findViewById(R.id.tv_ungtuyen);\r\n        scrollView = view.findViewById(R.id.scr_job_description);\r\n\r\n        if (LoginFreelancerFragment._id != null) {\r\n            endFlcId = LoginFreelancerFragment._id;\r\n        } else {\r\n            endFlcId = flcId;\r\n        }\r\n\r\n        if (endFlcId == null){\r\n            lnBtnTheoDoi.setVisibility(View.GONE);\r\n            lnBtnSaveBookmark.setVisibility(View.GONE);\r\n            lnBtnUngTuyen.setVisibility(View.GONE);\r\n            tvLienHe.setVisibility(View.GONE);\r\n        }\r\n\r\n\r\n        if (LoginEmployerFragment.accessTokenDb != null){\r\n            accessTokenDb = LoginEmployerFragment.accessTokenDb;\r\n        }else if (LoginFreelancerFragment.accessTokenDb != null){\r\n            accessTokenDb = LoginFreelancerFragment.accessTokenDb;\r\n        }else if (AuthActivity.accessTokenDbFlc != null){\r\n            accessTokenDb = AuthActivity.accessTokenDbFlc;\r\n        }else if (AuthActivity.accessTokenDbEmp != null){\r\n            accessTokenDb = AuthActivity.accessTokenDbEmp;\r\n        }\r\n\r\n        setEvent();\r\n        createMap();\r\n\r\n        Log.d(\"test\", \"onCreateView: job detail : \" + idJobs);\r\n        callJobDetail(idJobs);\r\n\r\n        return view;\r\n    }\r\n\r\n    private void createMap() {\r\n        ((SupportMapFragment) getChildFragmentManager().findFragmentById(R.id.map)).getMapAsync(this);\r\n    }\r\n\r\n    private void setEvent() {\r\n        lnBtnTheoDoi.setOnClickListener(this);\r\n        tvLienHe.setOnClickListener(this);\r\n        lnBtnUngTuyen.setOnClickListener(this);\r\n        lnBtnSaveBookmark.setOnClickListener(this);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.btnBookmarkJob:\r\n                if (countSave % 2 == 0) {\r\n\r\n                    createFlcFollowJob();\r\n\r\n                    countSave++;\r\n\r\n                } else {\r\n\r\n                    countSave++;\r\n                    createFlcFollowJob();\r\n                   // delFollowJobByFlc();\r\n                }\r\n                break;\r\n\r\n            case R.id.btnApplyJob:\r\n                if (countUngTuyen % 2 == 0) {\r\n\r\n                    countUngTuyen++;\r\n\r\n                    // call api ứng tuyển\r\n                    createContract();\r\n                } else {\r\n                    imgUngTuyen.setBackground(getActivity().getDrawable(R.drawable.ic_check_circle_black));\r\n                    tvUngtuyen.setText(\"Ứng tuyển\");\r\n                    tvUngtuyen.setTextColor(Color.rgb(0, 0, 0));\r\n                    countUngTuyen++;\r\n\r\n                    // call api hủy ứng tuyển\r\n                }\r\n                break;\r\n\r\n            case R.id.ln_btn_theo_doi:\r\n                if (dem % 2 == 0) {\r\n\r\n                    dem++;\r\n\r\n                    // call api follow employer\r\n                    createFlcFollowEmp();\r\n\r\n                } else {\r\n\r\n                    dem++;\r\n                    createFlcFollowEmp();\r\n                    // call api unfollow employer\r\n                   // delFollowEmpByFlc();\r\n                }\r\n                break;\r\n\r\n            case R.id.tv_lien_he:\r\n                newChat();\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onMapReady(GoogleMap googleMap) {\r\n        this.mMap = googleMap;\r\n        FragmentManager fm = getChildFragmentManager();\r\n        GojobSupportMapFragment gojobSupportMapFragment = (GojobSupportMapFragment) fm.findFragmentByTag(\"map_fragment\");\r\n        if (gojobSupportMapFragment == null) {\r\n            gojobSupportMapFragment = new GojobSupportMapFragment();\r\n            FragmentTransaction fragmentTransaction = fm.beginTransaction();\r\n            fragmentTransaction.add(R.id.map, gojobSupportMapFragment, \"map_fragment\");\r\n            fragmentTransaction.commit();\r\n            fm.executePendingTransactions();\r\n            locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\r\n            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n                focusGPS();\r\n                task.execute();\r\n            }\r\n        }\r\n        gojobSupportMapFragment.getMapAsync(this);\r\n        gojobSupportMapFragment.setListener(new GojobSupportMapFragment.OnTouchListener() {\r\n            @Override\r\n            public void onTouch() {\r\n                scrollView.requestDisallowInterceptTouchEvent(true);\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void turnOnGPS() {\r\n        startActivity(new Intent(android.provider.Settings.ACTION_LOCATION_SOURCE_SETTINGS));\r\n    }\r\n\r\n    private void showDialogGPS() {\r\n        fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\r\n        DialogTurnOnGPS dialogTurnOnGPS = new DialogTurnOnGPS(this);\r\n        dialogTurnOnGPS.show(fragmentTransaction, DialogTurnOnGPS.TAG);\r\n    }\r\n\r\n    private void focusGPS() {\r\n        mMap.getUiSettings().setMyLocationButtonEnabled(false);\r\n\r\n        if (ActivityCompat.checkSelfPermission(\r\n                getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 101);\r\n            return;\r\n        }\r\n        mFusedLocationClient.getLastLocation()\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<Location>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Location> task) {\r\n                        if (task.isSuccessful() && task.getResult() != null) {\r\n                            currentLocation = task.getResult();\r\n                            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(currentLocation.getLatitude(),\r\n                                    currentLocation.getLongitude()), 17));\r\n                            mMap.addMarker(new MarkerOptions().\r\n                                    position(new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()))\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public String makeURL(String sourceLat, String sourceLng, String destLat, String destLng) {\r\n        StringBuilder urlString = new StringBuilder();\r\n        urlString.append(\"https://maps.googleapis.com/maps/api/directions/json\");\r\n        urlString.append(\"?origin=\");\r\n        urlString.append(sourceLat);\r\n        urlString.append(\",\");\r\n        urlString.append(sourceLng);\r\n        urlString.append(\"&amp;\");\r\n        urlString.append(\"destination=\");\r\n        urlString.append(destLat);\r\n        urlString.append(\",\");\r\n        urlString.append(destLng);\r\n        urlString.append(\"&amp;\");\r\n        urlString.append(\"key=\" + getActivity().getString(R.string.google_api_key));\r\n\r\n        return urlString.toString();\r\n    }\r\n\r\n    final AsyncTask<Void, Void, Void> task = new AsyncTask<Void, Void, Void>() {\r\n        @Override\r\n        protected Void doInBackground(Void... voids) {\r\n            String request = makeURL(\"10.762643\", \"106.682079\", \"10.774467\", \"106.703274\");\r\n            DirectionJSONParse directionJSONParse = new DirectionJSONParse(request);\r\n            ArrayList<LatLng> list = directionJSONParse.testDirection();\r\n            for (LatLng latLng : list) {\r\n                listStep.add(latLng);\r\n            }\r\n\r\n            return null;\r\n        }\r\n\r\n        @Override\r\n        protected void onPostExecute(Void aVoid) {\r\n            super.onPostExecute(aVoid);\r\n            mMap.addPolyline(new PolylineOptions()\r\n                    .addAll(listStep)\r\n                    .width(6)\r\n                    .color(Color.rgb(86, 151, 255))\r\n            );\r\n        }\r\n    };\r\n\r\n    // freelancer theo doi employer\r\n    void createFlcFollowEmp() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.createFlcFollowEmp(endFlcId + \"\", empId + \"\", endFlcId + \"\", accessTokenDb + \"\").enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n                System.out.println(\"code create follow emp: \" + response.code());\r\n\r\n                if (response.code() == 200) {\r\n                    tvTheoDoi.setText(\"Đã theo dõi\");\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Theo dõi thất bại.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n                customProgressBar.dismiss();\r\n                Toast.makeText(getActivity(), \"Theo dõi thất bại.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    //freelancer huy theo doi employer\r\n    void delFollowEmpByFlc() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.delFollowEmpByFlc(empId + \"\", endFlcId + \"\", empName + \"\", accessTokenDb).enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n                System.out.println(\"code del follow job \" + response.code());\r\n\r\n                if (response.code() == 200) {\r\n                    tvTheoDoi.setText(\"Theo dõi\");\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Theo dõi thất bại.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                System.out.println(\"Err\");\r\n                customProgressBar.dismiss();\r\n                Toast.makeText(getActivity(), \"Hủy theo dõi thất bại.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    //freelancer luu cv\r\n    void createFlcFollowJob() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.createFlcFollowJob(endFlcId + \"\", idJobs + \"\",\"\" + endFlcId,  accessTokenDb).enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n                System.out.println(\"code create flc follow job: \" + response.code());\r\n\r\n                if (response.code() == 200) {\r\n                    imgSaveBookmark.setBackground(getActivity().getDrawable(R.drawable.ic_bookmark_orange));\r\n                    tvSave.setText(\"Đã lưu\");\r\n                    tvSave.setTextColor(Color.rgb(255, 140, 0));\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Lưu thất bại.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                customProgressBar.dismiss();\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n                customProgressBar.dismiss();\r\n                Toast.makeText(getActivity(), \"Lưu thất bại.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    //freelacer huy luu cv\r\n    void delFollowJobByFlc() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.delFollowJobByFlc(idJobs + \"\", endFlcId + \"\", accessTokenDb).enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n                System.out.println(\"code del follow job: \" + response.code());\r\n\r\n                imgSaveBookmark.setBackground(getActivity().getDrawable(R.drawable.ic_bookmark_black));\r\n                tvSave.setText(\"Lưu lại\");\r\n                tvSave.setTextColor(Color.rgb(0, 0, 0));\r\n                customProgressBar.dismiss();\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    void createContract() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.createContractByFreelancer(idJobs + \"\", endFlcId + \"\",\r\n                jobTotalSalary + \"\",\r\n                GojobConfig.STATUS_JOB_APPLIED + \"\",\r\n                empId + \"\", accessTokenDb).enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n\r\n                imgUngTuyen.setBackground(getActivity().getDrawable(R.drawable.ic_check_circle_orange));\r\n                tvUngtuyen.setText(\"Đã ứng tuyển\");\r\n                tvUngtuyen.setTextColor(Color.rgb(255, 140, 0));\r\n                customProgressBar.dismiss();\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                Toast.makeText(getActivity(), \"Ứng tuyển thất bại.\", Toast.LENGTH_SHORT).show();\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    //detail job\r\n    void callJobDetail(String idJobs) {\r\n\r\n        Log.d(\"test\", \"callJobDetail: id job detail fragment : \" + idJobs);\r\n        customProgressBar.show();\r\n\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getJobDetail(idJobs, accessTokenDb).enqueue(new Callback<List<Job>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Job>> call, Response<List<Job>> response) {\r\n\r\n                List<Job> jobs = response.body();\r\n\r\n                if (jobs.size() != 0) {\r\n                    Job job = jobs.get(0);\r\n\r\n                    if (job.getEmpId().getEmpLogo() != null) {\r\n                        String avatar = job.getEmpId().getEmpLogo();\r\n                        // parse base64 to bitmap (param : avataruser:  Result : String base 64 to bitmap)\r\n                        byte[] decodedString = Base64.decode(avatar, Base64.DEFAULT);\r\n                        Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);\r\n\r\n                        imgEmpLogo.setImageBitmap(decodedByte);\r\n                    } else {\r\n                        imgEmpLogo.setImageDrawable(getActivity().getDrawable(R.drawable.logo_splash));\r\n                    }\r\n\r\n                    empId = job.getEmpId().get_id();\r\n                    empName = job.getEmpId().getEmpName();\r\n                    jobTotalSalary = job.getJobTotalSalaryPerHeadCount() + \"\";\r\n//\r\n                    Log.d(\"test\", \"onResponse: job detail\" + response.body());\r\n                    tvTenNhaTuyenDung.setText(job.getEmpId().getEmpName());\r\n                    tvDiaChi.setText(job.getJobAddress());\r\n                    tvTenCongViec.setText(job.getJobTitle());\r\n                    tvMoTa.setText(job.getJobDescription());\r\n                    tvMucLuong.setText(job.getJobSalary() + \"\");\r\n                    if (job.isExperiencRequired()) {\r\n                        tvYeuCauKN.setText(\"Có\");\r\n                    } else {\r\n                        tvYeuCauKN.setText(\"Không\");\r\n                    }\r\n                    tvThoiGianBatDau.setText(job.getJobStart());\r\n                    tvThoiGianKetThuc.setText(job.getJobEnd());\r\n                    tvHanNopHoSo.setText(job.getJobEnd());\r\n                }\r\n\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Job>> call, Throwable t) {\r\n                Log.d(\"test\", \"onFailure: fail to get job detail\");\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n    private void newChat(){\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.newMessage(empId, endFlcId, accessTokenDb).enqueue(new Callback<RoomMessage>() {\r\n            @Override\r\n            public void onResponse(Call<RoomMessage> call, Response<RoomMessage> response) {\r\n                RoomMessage message = response.body();\r\n                _id = message.get_id();\r\n                if (_id != null){\r\n                    fragmentManager = getFragmentManager();\r\n                    ChatFragment chatFragment = new ChatFragment(_id);\r\n                    fragmentManager.beginTransaction().replace(R.id.frag_job_detail, chatFragment).addToBackStack(ChatFragment.TAG).commit();\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<RoomMessage> call, Throwable t) {\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Fragment/JobDetailFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Fragment/JobDetailFragment.java	(date 1618571170025)
@@ -1,12 +1,11 @@
 package vn.com.gojobs.Fragment;
 
-import android.Manifest;
-import android.content.Context;
 import android.content.Intent;
-import android.content.pm.PackageManager;
 import android.graphics.Bitmap;
 import android.graphics.BitmapFactory;
 import android.graphics.Color;
+import android.location.Address;
+import android.location.Geocoder;
 import android.location.Location;
 import android.location.LocationManager;
 import android.os.AsyncTask;
@@ -22,8 +21,6 @@
 import android.widget.TextView;
 import android.widget.Toast;
 
-import androidx.annotation.NonNull;
-import androidx.core.app.ActivityCompat;
 import androidx.fragment.app.Fragment;
 import androidx.fragment.app.FragmentManager;
 import androidx.fragment.app.FragmentTransaction;
@@ -37,9 +34,8 @@
 import com.google.android.gms.maps.model.LatLng;
 import com.google.android.gms.maps.model.MarkerOptions;
 import com.google.android.gms.maps.model.PolylineOptions;
-import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.Task;
 
+import java.io.IOException;
 import java.util.ArrayList;
 import java.util.List;
 
@@ -233,12 +229,8 @@
             fragmentTransaction.add(R.id.map, gojobSupportMapFragment, "map_fragment");
             fragmentTransaction.commit();
             fm.executePendingTransactions();
-            locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);
-            if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {
-                focusGPS();
-                task.execute();
-            }
         }
+
         gojobSupportMapFragment.getMapAsync(this);
         gojobSupportMapFragment.setListener(new GojobSupportMapFragment.OnTouchListener() {
             @Override
@@ -260,29 +252,43 @@
         dialogTurnOnGPS.show(fragmentTransaction, DialogTurnOnGPS.TAG);
     }
 
-    private void focusGPS() {
+    private void getJobLocation(String location) {
         mMap.getUiSettings().setMyLocationButtonEnabled(false);
+        List<Address> addressList = null;
+        if (location != null || !location.equals("")) {
+            Geocoder geocoder = new Geocoder(getContext());
+            try {
+                addressList = geocoder.getFromLocationName(location, 1);
 
-        if (ActivityCompat.checkSelfPermission(
-                getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
-                getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
-            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 101);
-            return;
-        }
-        mFusedLocationClient.getLastLocation()
-                .addOnCompleteListener(getActivity(), new OnCompleteListener<Location>() {
-                    @Override
-                    public void onComplete(@NonNull Task<Location> task) {
-                        if (task.isSuccessful() && task.getResult() != null) {
-                            currentLocation = task.getResult();
-                            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(currentLocation.getLatitude(),
-                                    currentLocation.getLongitude()), 17));
-                            mMap.addMarker(new MarkerOptions().
-                                    position(new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()))
-                            );
-                        }
-                    }
-                });
+            }catch (IOException e) {
+                e.printStackTrace();
+            }
+            Address address = addressList.get(0);
+            LatLng latLng = new LatLng(address.getLatitude(), address.getLongitude());
+            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom((latLng), 17));
+            mMap.addMarker(new MarkerOptions().position(latLng));
+        }
+//        if (ActivityCompat.checkSelfPermission(
+//                getContext(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(
+//                getContext(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {
+//            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 101);
+//            return;
+//        }
+//        mFusedLocationClient.getLastLocation()
+//                .addOnCompleteListener(getActivity(), new OnCompleteListener<Location>() {
+//                    @Override
+//                    public void onComplete(@NonNull Task<Location> task) {
+//                        if (task.isSuccessful() && task.getResult() != null) {
+//                            currentLocation = task.getResult();
+//                            mMap.animateCamera(CameraUpdateFactory.newLatLngZoom(new LatLng(currentLocation.getLatitude(),
+//                                    currentLocation.getLongitude()), 17));
+//
+//                            mMap.addMarker(new MarkerOptions().
+//                                    position(new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude()))
+//                            );
+//                        }
+//                    }
+//                });
     }
 
     public String makeURL(String sourceLat, String sourceLng, String destLat, String destLng) {
@@ -332,7 +338,7 @@
 
         customProgressBar.show();
         API api = retrofitClient.getClien().create(API.class);
-        api.createFlcFollowEmp(endFlcId + "", empId + "", endFlcId + "", accessTokenDb + "").enqueue(new Callback<Void>() {
+        api.createFlcFollowEmp(endFlcId + "", empId + "", endFlcId + "", accessTokenDb).enqueue(new Callback<Void>() {
             @Override
             public void onResponse(Call<Void> call, Response<Void> response) {
                 System.out.println("code create follow emp: " + response.code());
@@ -492,10 +498,11 @@
                     empId = job.getEmpId().get_id();
                     empName = job.getEmpId().getEmpName();
                     jobTotalSalary = job.getJobTotalSalaryPerHeadCount() + "";
-//
-                    Log.d("test", "onResponse: job detail" + response.body());
                     tvTenNhaTuyenDung.setText(job.getEmpId().getEmpName());
                     tvDiaChi.setText(job.getJobAddress());
+
+                    getJobLocation(job.getJobAddress());
+
                     tvTenCongViec.setText(job.getJobTitle());
                     tvMoTa.setText(job.getJobDescription());
                     tvMucLuong.setText(job.getJobSalary() + "");
Index: app/src/main/java/vn/com/gojobs/Freelancer/FreelancerSearchFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Freelancer;\r\n\r\nimport android.Manifest;\r\nimport android.content.Context;\r\nimport android.content.pm.PackageManager;\r\nimport android.location.Address;\r\nimport android.location.Geocoder;\r\nimport android.location.Location;\r\nimport android.location.LocationManager;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.KeyEvent;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.inputmethod.EditorInfo;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.MultiAutoCompleteTextView;\r\nimport android.widget.RelativeLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.gms.location.FusedLocationProviderClient;\r\nimport com.google.android.gms.location.LocationServices;\r\nimport com.google.android.gms.maps.model.LatLng;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Set;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.Adapter.JobAdapter;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.Fragment.JobDetailFragment;\r\nimport vn.com.gojobs.Model.GojobConfig;\r\nimport vn.com.gojobs.Model.Job;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.dialog.CustomProgressBar;\r\nimport vn.com.gojobs.interfake.API;\r\nimport vn.com.gojobs.interfake.IItemRowClickedCallback;\r\n\r\npublic class FreelancerSearchFragment extends Fragment implements IItemRowClickedCallback, View.OnClickListener {\r\n\r\n    RecyclerView rvJobRecommend, rvJobNear, rvAllJobQuerryItem;\r\n    RelativeLayout llMoveToIndustry;\r\n    FragmentManager fragmentManager;\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    TextView tvMoveToRecommendList, tvMoveToNearJobList, tvMoveToAllJobList;\r\n\r\n    MultiAutoCompleteTextView edtSearch;\r\n    private List<String> nganhNghe = new ArrayList<>();\r\n//    = {\"Kĩ sư phần mền\", \"Thiết kế đồ họa\", \"Lao động phổ thông\", \"Phụ bếp, nhà hàng - khách sạn\",\r\n//            \"Hướng dẫn viên du lịch\", \"Tiếp thị\", \"Nhân viên BĐS\",\r\n//            \"Giúp việc\", \"Giữ trẻ\", \"Chăm sóc thú cưng\", \"Dạy kèm\", \"Phụ quán\"};\r\n\r\n    ArrayList<Job> jobs = new ArrayList<>();\r\n    ArrayList<Job> allJobs = new ArrayList<>();\r\n    private List<Job> jobsNear = new ArrayList<>();\r\n    CustomProgressBar customProgressBar;\r\n    private List<String> list;\r\n    private LocationManager locationManager;\r\n    private FusedLocationProviderClient mFusedLocationClient;\r\n    public Location currentLocation;\r\n    String accessTokenDb;\r\n    private ImageView imgSearch;\r\n\r\n    public FreelancerSearchFragment() {\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        customProgressBar = new CustomProgressBar(getContext());\r\n\r\n        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(getActivity());\r\n\r\n        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\r\n        if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n            focusGPS();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        final View view = inflater.inflate(R.layout.fragment_freelancer_search, null);\r\n\r\n        customProgressBar.show();\r\n        mFusedLocationClient = LocationServices.getFusedLocationProviderClient(getActivity());\r\n        locationManager = (LocationManager) getContext().getSystemService(Context.LOCATION_SERVICE);\r\n        if (LoginFreelancerFragment.accessTokenDb != null) {\r\n            accessTokenDb = LoginFreelancerFragment.accessTokenDb;\r\n        } else {\r\n            accessTokenDb = AuthActivity.accessTokenDbFlc;\r\n        }\r\n        Log.d(\"a\", \"token \" + accessTokenDb);\r\n        mapItem(view);\r\n        setOnClick();\r\n        setDataSearch();\r\n\r\n        Handler handler = new Handler();\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                getPaginationJobWithFilter();\r\n\r\n                if (currentLocation != null) {\r\n\r\n                    getPaginationJobWithAddress();\r\n                }\r\n\r\n                getPaginationJobWithTime();\r\n\r\n                customProgressBar.dismiss();\r\n            }\r\n        }, 2000);\r\n\r\n        if (locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER)) {\r\n            focusGPS();\r\n        }\r\n\r\n        return view;\r\n    }\r\n\r\n    private String getVillage(LatLng lng) {\r\n\r\n        Geocoder geocoder = new Geocoder(getActivity(), Locale.getDefault());\r\n        ArrayList<String> arr = new ArrayList<>();\r\n        try {\r\n            List<Address> addressList = geocoder.getFromLocation(\r\n                    lng.latitude, lng.longitude, 1);\r\n            if (addressList != null && addressList.size() > 0) {\r\n\r\n                Address address = addressList.get(0);\r\n                if (address.getSubAdminArea() != null) {\r\n                    arr.add(address.getSubAdminArea());\r\n                } else {\r\n                    arr.add(\"\");\r\n                }\r\n            }\r\n        } catch (Exception e) {\r\n        }\r\n\r\n        if (arr.size() > 0) {\r\n            return arr.get(0);\r\n        } else {\r\n            return \" \";\r\n        }\r\n    }\r\n\r\n    public void focusGPS() {\r\n\r\n        if (ActivityCompat.checkSelfPermission(\r\n                getActivity(), Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(\r\n                getActivity(), Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(getActivity(), new String[]{Manifest.permission.ACCESS_FINE_LOCATION}, 101);\r\n            return;\r\n        }\r\n        mFusedLocationClient.getLastLocation()\r\n                .addOnCompleteListener(getActivity(), new OnCompleteListener<Location>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<Location> task) {\r\n                        if (task.isSuccessful() && task.getResult() != null) {\r\n                            currentLocation = task.getResult();\r\n                            Log.d(\"test\", \"lat : \" + currentLocation.getLatitude() + \" log : \" + currentLocation.getLongitude());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void mapItem(View view) {\r\n        rvJobRecommend = view.findViewById(R.id.rvRecommendJob);\r\n        rvJobNear = view.findViewById(R.id.rvNearJob);\r\n        rvAllJobQuerryItem = view.findViewById(R.id.rvAllJob);\r\n        llMoveToIndustry = view.findViewById(R.id.llMoveToIndustry);\r\n        edtSearch = view.findViewById(R.id.edt_search_freelancer);\r\n        imgSearch = view.findViewById(R.id.img_search);\r\n        tvMoveToRecommendList = view.findViewById(R.id.tv_see_more_job_recommend_freelancer);\r\n        tvMoveToNearJobList = view.findViewById(R.id.tv_see_more_job_near_freelancer);\r\n        tvMoveToAllJobList = view.findViewById(R.id.tv_see_more_all_job_freelancer);\r\n\r\n    }\r\n\r\n    private void setOnClick() {\r\n        tvMoveToRecommendList.setOnClickListener(this);\r\n        tvMoveToNearJobList.setOnClickListener(this);\r\n        tvMoveToAllJobList.setOnClickListener(this);\r\n        llMoveToIndustry.setOnClickListener(this);\r\n        imgSearch.setOnClickListener(this);\r\n    }\r\n\r\n    private void setDataSearch() {\r\n\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getFieldForSearch(accessTokenDb).enqueue(new Callback<List<String>>() {\r\n            @Override\r\n            public void onResponse(Call<List<String>> call, Response<List<String>> response) {\r\n                nganhNghe = response.body();\r\n                if (nganhNghe != null){\r\n                    ArrayAdapter adapterLanguages = new ArrayAdapter(getActivity(), android.R.layout.simple_list_item_1, nganhNghe);\r\n\r\n                    edtSearch.setAdapter(adapterLanguages);\r\n\r\n                    edtSearch.setThreshold(1);\r\n\r\n                    // The text separated by commas\r\n                    edtSearch.setTokenizer(new MultiAutoCompleteTextView.CommaTokenizer());\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<String>> call, Throwable t) {\r\n\r\n            }\r\n        });\r\n\r\n        edtSearch.setOnEditorActionListener(new TextView.OnEditorActionListener() {\r\n            @Override\r\n            public boolean onEditorAction(TextView textView, int actionId, KeyEvent event) {\r\n                boolean handled = false;\r\n                if (actionId == EditorInfo.IME_ACTION_SEARCH\r\n                        || actionId == EditorInfo.IME_ACTION_DONE\r\n                        || event.getAction() == KeyEvent.ACTION_DOWN\r\n                        && event.getKeyCode() == KeyEvent.KEYCODE_ENTER) {\r\n\r\n                    String textSearch = edtSearch.getText().toString();\r\n                    textSearch = textSearch.substring(0,textSearch.length() - 2);\r\n\r\n                    fragmentManager = getFragmentManager();\r\n                    FreelancerSearchJobFragment searchJobFragment = new FreelancerSearchJobFragment(textSearch);\r\n                    fragmentManager.beginTransaction().replace(R.id.rl_parent_search_freelancer_fragment, searchJobFragment).addToBackStack(FreelancerSearchJobFragment.TAG).commit();\r\n\r\n                    handled = true;\r\n                }\r\n                return handled;\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n    }\r\n\r\n    @Override\r\n    public void onButtonClicked(String _id) {\r\n\r\n        fragmentManager = getFragmentManager();\r\n        JobDetailFragment jobDetailFragment = new JobDetailFragment(_id);\r\n        fragmentManager.beginTransaction().replace(R.id.rl_parent_search_freelancer_fragment, jobDetailFragment).addToBackStack(JobDetailFragment.TAG).commit();\r\n\r\n    }\r\n\r\n    void getPaginationJobWithTime() {\r\n\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getJobWithTime(GojobConfig.SORT_DESC + \"\", 1, 5, accessTokenDb).enqueue(new Callback<List<Job>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Job>> call, Response<List<Job>> response) {\r\n\r\n                allJobs = (ArrayList<Job>) response.body();\r\n\r\n                if (allJobs != null) {\r\n                    LinearLayoutManager layoutManager3 = new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\r\n                    rvAllJobQuerryItem.setLayoutManager(layoutManager3);\r\n                    JobAdapter adapter3 = new JobAdapter(getContext(), allJobs, FreelancerSearchFragment.this);\r\n                    rvAllJobQuerryItem.setAdapter(adapter3);\r\n                }\r\n\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Job>> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    void getPaginationJobWithFilter() {\r\n\r\n        customProgressBar.show();\r\n        list = new ArrayList<>();\r\n        Set<String> set = AuthActivity.sharedPreferences.getStringSet(\"list_filter\", null);\r\n        if (set != null) {\r\n            list.addAll(set);\r\n        }\r\n\r\n        API api = retrofitClient.getClien().create(API.class);\r\n\r\n        if (list.size() > 0) {\r\n            api.getJobWithFilter(GojobConfig.SORT_DESC + \"\", list, 1, 5, accessTokenDb).enqueue(new Callback<List<Job>>() {\r\n                @Override\r\n                public void onResponse(Call<List<Job>> call, Response<List<Job>> response) {\r\n                    List<Job> jobsRecommend = response.body();\r\n\r\n                    if (jobsRecommend != null) {\r\n                        LinearLayoutManager layoutManager3 = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);\r\n                        rvJobRecommend.setLayoutManager(layoutManager3);\r\n                        JobAdapter adapter3 = new JobAdapter(getContext(), (ArrayList<Job>) jobsRecommend, FreelancerSearchFragment.this);\r\n                        rvJobRecommend.setAdapter(adapter3);\r\n                    }\r\n                    customProgressBar.dismiss();\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<List<Job>> call, Throwable t) {\r\n                    System.out.println(\"err\");\r\n                    customProgressBar.dismiss();\r\n                }\r\n            });\r\n        } else {\r\n            api.getJobWithTime(GojobConfig.SORT_DESC + \"\", 1, 5, accessTokenDb).enqueue(new Callback<List<Job>>() {\r\n                @Override\r\n                public void onResponse(Call<List<Job>> call, Response<List<Job>> response) {\r\n\r\n                    allJobs = (ArrayList<Job>) response.body();\r\n\r\n                    if (allJobs != null) {\r\n                        LinearLayoutManager layoutManager3 = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);\r\n                        rvJobRecommend.setLayoutManager(layoutManager3);\r\n                        JobAdapter adapter3 = new JobAdapter(getContext(), allJobs, FreelancerSearchFragment.this);\r\n                        rvJobRecommend.setAdapter(adapter3);\r\n                    }\r\n                    customProgressBar.dismiss();\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<List<Job>> call, Throwable t) {\r\n                    System.out.println(\"err\");\r\n\r\n                    customProgressBar.dismiss();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    void getPaginationJobWithAddress() {\r\n\r\n        if (currentLocation != null) {\r\n            LatLng latLng = new LatLng(currentLocation.getLatitude(), currentLocation.getLongitude());\r\n\r\n            String name = getVillage(latLng);\r\n            Log.d(\"test\", \"getPaginationJobWithAddress: NAME : \" + name);\r\n\r\n            API api = retrofitClient.getClien().create(API.class);\r\n            api.getJobWithAddress(GojobConfig.SORT_DESC + \"\", name + \"\", 1, 5, accessTokenDb).enqueue(new Callback<List<Job>>() {\r\n                @Override\r\n                public void onResponse(Call<List<Job>> call, Response<List<Job>> response) {\r\n\r\n                    jobsNear = response.body();\r\n\r\n                    if (jobsNear != null) {\r\n                        LinearLayoutManager layoutManager1 = new LinearLayoutManager(getContext(), LinearLayoutManager.HORIZONTAL, false);\r\n                        rvJobNear.setLayoutManager(layoutManager1);\r\n                        JobAdapter adapter1 = new JobAdapter(getContext(), (ArrayList<Job>) jobsNear, FreelancerSearchFragment.this);\r\n                        rvJobNear.setAdapter(adapter1);\r\n                    }\r\n                    customProgressBar.dismiss();\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<List<Job>> call, Throwable t) {\r\n                    System.out.println(\"err\");\r\n                    customProgressBar.dismiss();\r\n                }\r\n            });\r\n        } else {\r\n            Log.d(\"test\", \"getPaginationJobWithAddress: chua co location\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.img_search:\r\n                String textSearch = edtSearch.getText().toString();\r\n                fragmentManager = getFragmentManager();\r\n                FreelancerSearchJobFragment searchJobFragment = new FreelancerSearchJobFragment(textSearch);\r\n                fragmentManager.beginTransaction().replace(R.id.rl_parent_search_freelancer_fragment, searchJobFragment).addToBackStack(FreelancerSearchJobFragment.TAG).commit();\r\n                break;\r\n            case R.id.tv_see_more_job_recommend_freelancer:\r\n                // call api jobs recommend\r\n                fragmentManager = getFragmentManager();\r\n                FreelancerSearchJobRecommendFragment freelancerSearchJobRecommendFragment = new FreelancerSearchJobRecommendFragment(list);\r\n                fragmentManager.beginTransaction().replace(R.id.rl_parent_search_freelancer_fragment, freelancerSearchJobRecommendFragment).addToBackStack(FreelancerSearchJobRecommendFragment.TAG).commit();\r\n                break;\r\n            case R.id.tv_see_more_job_near_freelancer:\r\n                // call api jobs near\r\n                fragmentManager = getFragmentManager();\r\n                FreelancerSearchJobNearFragment freelancerSearchJobNearFragment = new FreelancerSearchJobNearFragment(currentLocation, accessTokenDb);\r\n                fragmentManager.beginTransaction().replace(R.id.rl_parent_search_freelancer_fragment, freelancerSearchJobNearFragment).addToBackStack(FreelancerSearchJobNearFragment.TAG).commit();\r\n                break;\r\n            case R.id.tv_see_more_all_job_freelancer:\r\n                // call api all jobs\r\n                fragmentManager = getFragmentManager();\r\n                FreelancerSearchJobAllFragment freelancerSearchJobAllFragment = new FreelancerSearchJobAllFragment();\r\n                fragmentManager.beginTransaction().replace(R.id.rl_parent_search_freelancer_fragment, freelancerSearchJobAllFragment).addToBackStack(FreelancerSearchJobAllFragment.TAG).commit();\r\n                break;\r\n            case R.id.llMoveToIndustry:\r\n                // move to industry fragment\r\n                fragmentManager = getFragmentManager();\r\n                FreelancerIndustryFragment freelancerIndustryFragment = new FreelancerIndustryFragment();\r\n                fragmentManager.beginTransaction().replace(R.id.main_freelancer, freelancerIndustryFragment).addToBackStack(FreelancerIndustryFragment.TAG).commit();\r\n                break;\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Freelancer/FreelancerSearchFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Freelancer/FreelancerSearchFragment.java	(date 1618571170027)
@@ -56,27 +56,22 @@
 
 public class FreelancerSearchFragment extends Fragment implements IItemRowClickedCallback, View.OnClickListener {
 
-    RecyclerView rvJobRecommend, rvJobNear, rvAllJobQuerryItem;
-    RelativeLayout llMoveToIndustry;
-    FragmentManager fragmentManager;
-    RetrofitClient retrofitClient = new RetrofitClient();
-    TextView tvMoveToRecommendList, tvMoveToNearJobList, tvMoveToAllJobList;
+    private RecyclerView rvJobRecommend, rvJobNear, rvAllJobQuerryItem;
+    private RelativeLayout llMoveToIndustry;
+    private FragmentManager fragmentManager;
+    private RetrofitClient retrofitClient = new RetrofitClient();
+    private TextView tvMoveToRecommendList, tvMoveToNearJobList, tvMoveToAllJobList;
 
-    MultiAutoCompleteTextView edtSearch;
+    private MultiAutoCompleteTextView edtSearch;
     private List<String> nganhNghe = new ArrayList<>();
-//    = {"Kĩ sư phần mền", "Thiết kế đồ họa", "Lao động phổ thông", "Phụ bếp, nhà hàng - khách sạn",
-//            "Hướng dẫn viên du lịch", "Tiếp thị", "Nhân viên BĐS",
-//            "Giúp việc", "Giữ trẻ", "Chăm sóc thú cưng", "Dạy kèm", "Phụ quán"};
-
-    ArrayList<Job> jobs = new ArrayList<>();
-    ArrayList<Job> allJobs = new ArrayList<>();
+    private ArrayList<Job> allJobs = new ArrayList<>();
     private List<Job> jobsNear = new ArrayList<>();
-    CustomProgressBar customProgressBar;
+    private CustomProgressBar customProgressBar;
     private List<String> list;
     private LocationManager locationManager;
     private FusedLocationProviderClient mFusedLocationClient;
     public Location currentLocation;
-    String accessTokenDb;
+    private String accessTokenDb;
     private ImageView imgSearch;
 
     public FreelancerSearchFragment() {
@@ -269,6 +264,7 @@
 
     void getPaginationJobWithTime() {
 
+        customProgressBar.show();
         API api = retrofitClient.getClien().create(API.class);
         api.getJobWithTime(GojobConfig.SORT_DESC + "", 1, 5, accessTokenDb).enqueue(new Callback<List<Job>>() {
             @Override
@@ -360,6 +356,7 @@
             String name = getVillage(latLng);
             Log.d("test", "getPaginationJobWithAddress: NAME : " + name);
 
+            customProgressBar.show();
             API api = retrofitClient.getClien().create(API.class);
             api.getJobWithAddress(GojobConfig.SORT_DESC + "", name + "", 1, 5, accessTokenDb).enqueue(new Callback<List<Job>>() {
                 @Override
Index: app/src/main/java/vn/com/gojobs/Employer/ListContractJobFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Employer;\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.RelativeLayout;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.Adapter.ContractAdapter;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.Fragment.FragmentGiveFeedback;\r\nimport vn.com.gojobs.Model.Contract;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.dialog.ButtonContractDialog;\r\nimport vn.com.gojobs.dialog.CustomProgressBar;\r\nimport vn.com.gojobs.interfake.API;\r\nimport vn.com.gojobs.interfake.IItemRowClickedCallback;\r\nimport vn.com.gojobs.interfake.ItemRowClickedCallbackForContract;\r\nimport vn.com.gojobs.interfake.onClickButton;\r\n\r\npublic class ListContractJobFragment extends Fragment implements IItemRowClickedCallback, ItemRowClickedCallbackForContract, onClickButton {\r\n\r\n    public static final String TAG = \"ListContractJobFragment\";\r\n    private final String _id;\r\n    private String contractStatus;\r\n\r\n    private ArrayList<Contract> contracts;\r\n\r\n    FragmentManager fragmentManager;\r\n    private RecyclerView rvAllContract;\r\n    private RelativeLayout rlContain;\r\n    private LinearLayoutManager linearLayoutManager;\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    String accessTokenDb;\r\n    CustomProgressBar customProgressBar;\r\n\r\n    public ListContractJobFragment(String _id, String contractStatus) {\r\n        this._id = _id;\r\n        this.contractStatus = contractStatus;\r\n    }\r\n\r\n    public ListContractJobFragment(String _id) {\r\n        this._id = _id;\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_list_contract_job, container, false);\r\n        customProgressBar = new CustomProgressBar(getContext());\r\n        //dataDummy();\r\n        rlContain = view.findViewById(R.id.rl_list_contract_fragment);\r\n        rlContain.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                return;\r\n            }\r\n        });\r\n        rvAllContract = view.findViewById(R.id.rvAllContract);\r\n        if (LoginEmployerFragment.accessTokenDb != null) {\r\n\r\n            accessTokenDb = LoginEmployerFragment.accessTokenDb;\r\n        } else {\r\n\r\n            accessTokenDb = AuthActivity.accessTokenDbEmp;\r\n        }\r\n        System.out.println(_id + \" _id\");\r\n        System.out.println(contractStatus);\r\n        getContractByJobId();\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onButtonClicked(String IdFlc) {\r\n\r\n        fragmentManager = getActivity().getSupportFragmentManager();\r\n        CVFreelancerFragment cvFreelancerFragment = new CVFreelancerFragment(IdFlc);\r\n        fragmentManager.beginTransaction().replace(R.id.rl_list_contract_fragment, cvFreelancerFragment).addToBackStack(CVFreelancerFragment.TAG).commit();\r\n\r\n    }\r\n\r\n\r\n    private void getContractByJobId() {\r\n        customProgressBar.show();\r\n        final ArrayList<Contract> contractArrayList = new ArrayList<>();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getContractByJobId(_id, contractStatus, accessTokenDb).enqueue(new Callback<List<Contract>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Contract>> call, Response<List<Contract>> response) {\r\n                List<Contract> contracts = response.body();\r\n                Log.d(\"b\", \"ssss \" + contracts);\r\n                if (response.code() == 200) {\r\n                    contractArrayList.clear();\r\n                    contractArrayList.addAll(contracts);\r\n                    if (contractArrayList != null) {\r\n                        LinearLayoutManager layoutManager3 = new LinearLayoutManager(getContext(), LinearLayoutManager.VERTICAL, false);\r\n                        rvAllContract.setLayoutManager(layoutManager3);\r\n                        ContractAdapter adapter3 = new ContractAdapter(getContext(), contractArrayList, ListContractJobFragment.this, ListContractJobFragment.this);\r\n                        rvAllContract.setAdapter(adapter3);\r\n                        adapter3.notifyDataSetChanged();\r\n                    }\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Contract>> call, Throwable t) {\r\n                Log.d(\"a\", \"errr \" + t);\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onItemRowClickedd(String contractStatus, String _id) {\r\n        fragmentManager = getFragmentManager();\r\n        ButtonContractDialog buttonContractDialog = new ButtonContractDialog(_id, contractStatus, this);\r\n        buttonContractDialog.show(fragmentManager, TAG);\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        Log.d(\"resume\", \"onResume\");\r\n    }\r\n\r\n    @Override\r\n    public void onAcceptDialog(String status) {\r\n        if (status.equals(\"Yes\")){\r\n\r\n            Handler handler = new Handler();\r\n            handler.postDelayed(new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    getContractByJobId();\r\n                }\r\n            },1500);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void moveFeedback(String flcId, String jobId) {\r\n        fragmentManager = getFragmentManager();\r\n        FragmentGiveFeedback fragmentGiveFeedback = new FragmentGiveFeedback(flcId, jobId);\r\n        fragmentManager.beginTransaction().replace(R.id.rl_list_contract_fragment, fragmentGiveFeedback).addToBackStack(FragmentGiveFeedback.TAG).commit();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Employer/ListContractJobFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Employer/ListContractJobFragment.java	(date 1618571170018)
@@ -85,8 +85,7 @@
 
             accessTokenDb = AuthActivity.accessTokenDbEmp;
         }
-        System.out.println(_id + " _id");
-        System.out.println(contractStatus);
+
         getContractByJobId();
 
         return view;
Index: app/src/main/res/layout/contract_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.cardview.widget.CardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"@dimen/_5sdp\"\r\n    android:elevation=\"@dimen/_5sdp\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/ln_parent_contract\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"horizontal\">\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/img_avatar_freelancer_contract\"\r\n                    android:layout_width=\"@dimen/_70sdp\"\r\n                    android:layout_height=\"@dimen/_70sdp\"\r\n                    android:layout_margin=\"@dimen/_5sdp\"\r\n                    android:src=\"@drawable/avatar_logo\" />\r\n\r\n                <LinearLayout\r\n                    android:id=\"@+id/ln_avatar_name\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center_vertical\"\r\n                    android:orientation=\"vertical\"\r\n                    android:layout_marginRight=\"@dimen/_5sdp\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_ten_freelancer_contract\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginLeft=\"@dimen/_5sdp\"\r\n                        android:paddingTop=\"@dimen/_5sdp\"\r\n                        android:paddingBottom=\"@dimen/_5sdp\"\r\n                        android:text=\"Tên freelancer\"\r\n                        android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                    <LinearLayout\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:orientation=\"horizontal\"\r\n                        >\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/tv_luong_contract\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:layout_marginLeft=\"@dimen/_5sdp\"\r\n                        android:paddingTop=\"@dimen/_5sdp\"\r\n                        android:paddingBottom=\"@dimen/_5sdp\"\r\n                        android:text=\"123465\"\r\n                        android:textSize=\"@dimen/_12sdp\" />\r\n\r\n                        <TextView\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_gravity=\"center_vertical\"\r\n                            android:layout_marginLeft=\"@dimen/_5sdp\"\r\n                            android:paddingTop=\"@dimen/_5sdp\"\r\n                            android:paddingBottom=\"@dimen/_5sdp\"\r\n                            android:text=\"VND\"\r\n                            android:textSize=\"@dimen/_12sdp\" />\r\n                    </LinearLayout>\r\n                </LinearLayout>\r\n\r\n\r\n            </LinearLayout>\r\n\r\n        </LinearLayout>\r\n\r\n        <RelativeLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginTop=\"@dimen/_5sdp\"\r\n            android:layout_marginRight=\"@dimen/_5sdp\"\r\n            android:layout_marginBottom=\"@dimen/_5sdp\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_chap_nhan_contract\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginRight=\"@dimen/_20sdp\"\r\n                android:layout_toLeftOf=\"@+id/tv_tu_choi_contract\"\r\n                android:gravity=\"center_vertical\"\r\n                android:text=\"Chấp nhận\"\r\n                android:textSize=\"@dimen/_12sdp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_tu_choi_contract\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_alignParentRight=\"true\"\r\n                android:layout_marginRight=\"@dimen/_10sdp\"\r\n                android:gravity=\"center_vertical\"\r\n                android:text=\"Từ chối\"\r\n                android:textSize=\"@dimen/_12sdp\"\r\n                android:textStyle=\"bold\" />\r\n\r\n        </RelativeLayout>\r\n    </LinearLayout>\r\n\r\n</androidx.cardview.widget.CardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/contract_item.xml	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/res/layout/contract_item.xml	(date 1618571170033)
@@ -3,7 +3,8 @@
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
     android:layout_margin="@dimen/_5sdp"
-    android:elevation="@dimen/_5sdp">
+    android:background="@drawable/background_freelancer_job_item"
+    android:elevation="@dimen/_7sdp">
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/res/layout/fragment_freelancer_profile.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:background=\"@color/white\"\r\n    android:orientation=\"vertical\">\r\n\r\n    <ScrollView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"@dimen/_10sdp\"\r\n        android:fillViewport=\"true\"\r\n        android:scrollbars=\"none\">\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginLeft=\"@dimen/_20sdp\"\r\n            android:layout_marginRight=\"@dimen/_20sdp\"\r\n            android:gravity=\"center\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <de.hdodenhof.circleimageview.CircleImageView\r\n                android:id=\"@+id/img_avatar_freelancer_profile\"\r\n                android:layout_width=\"@dimen/_85sdp\"\r\n                android:layout_height=\"@dimen/_85sdp\"\r\n                android:layout_gravity=\"center\"\r\n                android:layout_marginTop=\"@dimen/_20sdp\"\r\n                android:src=\"@drawable/avatar_logo\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Tên\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_name_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"Xuân\"\r\n                android:textColor=\"#787878\"\r\n                />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Email\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12sdp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_email_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"abc@gmail.com\"\r\n                android:enabled=\"false\"\r\n                android:inputType=\"textEmailAddress\"\r\n                android:textColor=\"#787878\"  />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"SĐT\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_sdt_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"0765782026\"\r\n                android:maxLength=\"11\"\r\n                android:inputType=\"phone\"\r\n                android:textColor=\"#787878\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Học Vấn\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_hoc_van_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"kĩ sư\"\r\n                android:textColor=\"#787878\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Nghề nghiệp\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_nghe_nghiep_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"Lập trình viên\"\r\n                android:textColor=\"#787878\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Trình độ ngoại ngữ\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_trinh_do_ngoai_ngu_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"Tiếng anh\"\r\n                android:textColor=\"#787878\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Giới tính\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <Spinner\r\n                android:id=\"@+id/sp_gioi_tinh_freelancer\"\r\n                style=\"@android:style/Widget.Material.Spinner.Underlined\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:textColor=\"#787878\"\r\n                android:textSize=\"@dimen/_13ssp\"\r\n                tools:targetApi=\"lollipop\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Ngày sinh\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/tv_ngay_sinh_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:paddingTop=\"@dimen/_5sdp\"\r\n                android:text=\"01-01-2000\"\r\n                android:textSize=\"@dimen/_12ssp\"\r\n                android:textColor=\"#787878\" />\r\n\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:paddingTop=\"@dimen/_8sdp\"\r\n                android:text=\"Địa chỉ\"\r\n                android:textColor=\"#FF9800\"\r\n                android:textSize=\"@dimen/_12ssp\" />\r\n\r\n            <EditText\r\n                android:id=\"@+id/edt_dia_chi_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:backgroundTint=\"#8DB3AFAF\"\r\n                android:hint=\"Quận Hai, TP Vũng Tàu\"\r\n                android:textColor=\"#787878\" />\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_weight=\"1\"\r\n                    android:orientation=\"vertical\">\r\n\r\n                    <TextView\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center_vertical\"\r\n                        android:text=\"Tỉnh/TP\"\r\n                        android:textColor=\"#FF9800\"\r\n                        android:textSize=\"@dimen/_12ssp\" />\r\n\r\n                    <Spinner\r\n                        android:id=\"@+id/sp_TP\"\r\n                        style=\"@android:style/Widget.Material.Spinner.Underlined\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_margin=\"@dimen/_2sdp\"\r\n                        android:backgroundTint=\"#8DB3AFAF\"\r\n                        android:textColor=\"#787878\"\r\n                        android:textSize=\"@dimen/_12ssp\"\r\n                        tools:targetApi=\"lollipop\" />\r\n                </LinearLayout>\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center_vertical\"\r\n                    android:text=\"Quận/Huyện\"\r\n                    android:textColor=\"#FF9800\"\r\n                    android:textSize=\"@dimen/_12ssp\" />\r\n\r\n                <Spinner\r\n                    android:id=\"@+id/sp_Quan\"\r\n                    style=\"@android:style/Widget.Material.Spinner.Underlined\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_margin=\"@dimen/_2sdp\"\r\n                    android:backgroundTint=\"#8DB3AFAF\"\r\n                    android:textColor=\"#787878\"\r\n                    android:textSize=\"@dimen/_12ssp\"\r\n                    tools:targetApi=\"lollipop\" />\r\n            </LinearLayout>\r\n\r\n            <Button\r\n                android:id=\"@+id/btn_finish_freelancer\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginLeft=\"@dimen/_35sdp\"\r\n                android:layout_marginTop=\"@dimen/_20sdp\"\r\n                android:layout_marginRight=\"@dimen/_35sdp\"\r\n                android:layout_marginBottom=\"@dimen/_10sdp\"\r\n                android:background=\"@drawable/rounded_btn_signup\"\r\n                android:drawableRight=\"@drawable/ic_forward_white\"\r\n                android:paddingLeft=\"@dimen/_20sdp\"\r\n                android:paddingRight=\"@dimen/_30sdp\"\r\n                android:text=\"Hoàn tất\"\r\n                android:textAllCaps=\"false\"\r\n                android:textColor=\"#FFFFFF\"\r\n                android:textSize=\"@dimen/_14ssp\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </ScrollView>\r\n\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_freelancer_profile.xml	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/res/layout/fragment_freelancer_profile.xml	(date 1618571170034)
@@ -42,7 +42,7 @@
                 android:layout_height="wrap_content"
                 android:backgroundTint="#8DB3AFAF"
                 android:hint="Xuân"
-                android:textColor="#787878"
+                android:textColor="@color/black"
                 />
 
             <TextView
@@ -61,7 +61,7 @@
                 android:hint="abc@gmail.com"
                 android:enabled="false"
                 android:inputType="textEmailAddress"
-                android:textColor="#787878"  />
+                android:textColor="@color/black"  />
 
             <TextView
                 android:layout_width="match_parent"
@@ -79,7 +79,7 @@
                 android:hint="0765782026"
                 android:maxLength="11"
                 android:inputType="phone"
-                android:textColor="#787878" />
+                android:textColor="@color/black" />
 
             <TextView
                 android:layout_width="match_parent"
@@ -95,7 +95,7 @@
                 android:layout_height="wrap_content"
                 android:backgroundTint="#8DB3AFAF"
                 android:hint="kĩ sư"
-                android:textColor="#787878" />
+                android:textColor="@color/black" />
 
             <TextView
                 android:layout_width="match_parent"
@@ -111,7 +111,7 @@
                 android:layout_height="wrap_content"
                 android:backgroundTint="#8DB3AFAF"
                 android:hint="Lập trình viên"
-                android:textColor="#787878" />
+                android:textColor="@color/black" />
 
             <TextView
                 android:layout_width="match_parent"
@@ -127,7 +127,7 @@
                 android:layout_height="wrap_content"
                 android:backgroundTint="#8DB3AFAF"
                 android:hint="Tiếng anh"
-                android:textColor="#787878" />
+                android:textColor="@color/black" />
 
             <TextView
                 android:layout_width="match_parent"
@@ -163,7 +163,7 @@
                 android:paddingTop="@dimen/_5sdp"
                 android:text="01-01-2000"
                 android:textSize="@dimen/_12ssp"
-                android:textColor="#787878" />
+                android:textColor="@color/black" />
 
             <TextView
                 android:layout_width="match_parent"
@@ -179,7 +179,7 @@
                 android:layout_height="wrap_content"
                 android:backgroundTint="#8DB3AFAF"
                 android:hint="Quận Hai, TP Vũng Tàu"
-                android:textColor="#787878" />
+                android:textColor="@color/black" />
 
             <LinearLayout
                 android:layout_width="match_parent"
@@ -201,7 +201,7 @@
                         android:textSize="@dimen/_12ssp" />
 
                     <Spinner
-                        android:id="@+id/sp_TP"
+                        android:id="@+id/sp_tinh"
                         style="@android:style/Widget.Material.Spinner.Underlined"
                         android:layout_width="match_parent"
                         android:layout_height="wrap_content"
@@ -228,7 +228,7 @@
                     android:textSize="@dimen/_12ssp" />
 
                 <Spinner
-                    android:id="@+id/sp_Quan"
+                    android:id="@+id/sp_huyen"
                     style="@android:style/Widget.Material.Spinner.Underlined"
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
Index: app/src/main/java/vn/com/gojobs/Freelancer/ProfileFreelancerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package vn.com.gojobs.Freelancer;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.DatePickerDialog;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.graphics.Matrix;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.os.Environment;\r\nimport android.os.Handler;\r\nimport android.provider.MediaStore;\r\nimport android.util.Base64;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.DatePicker;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.FileProvider;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentTransaction;\r\n\r\nimport java.io.ByteArrayOutputStream;\r\nimport java.io.File;\r\nimport java.io.IOException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.TimeZone;\r\n\r\nimport retrofit2.Call;\r\nimport retrofit2.Callback;\r\nimport retrofit2.Response;\r\nimport vn.com.gojobs.AuthActivity;\r\nimport vn.com.gojobs.Model.Freelancer;\r\nimport vn.com.gojobs.Model.Location;\r\nimport vn.com.gojobs.R;\r\nimport vn.com.gojobs.RetrofitClient;\r\nimport vn.com.gojobs.dialog.CaptureDialog;\r\nimport vn.com.gojobs.dialog.CustomProgressBar;\r\nimport vn.com.gojobs.interfake.API;\r\nimport vn.com.gojobs.interfake.OnImageCallback;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\nimport static com.facebook.internal.instrument.InstrumentUtility.deleteFile;\r\n\r\npublic class ProfileFreelancerFragment extends Fragment implements View.OnClickListener, OnImageCallback {\r\n\r\n    public static final String TAG = \"ProfileFreelancerFragment\";\r\n    final Calendar newCalendar = Calendar.getInstance();\r\n    private final String DATE_FORMAT = \"dd-MM-yyyy\";\r\n    private Spinner spGioiTinh, spQuan, spTP;\r\n    private String[] sexs = {\"Nam\", \"Nữ\"};\r\n    private ArrayList<String> districts = new ArrayList<>();\r\n    private ArrayList<String> province = new ArrayList<>();\r\n    private ImageView circleImageView;\r\n    private FragmentTransaction fragmentTransaction;\r\n    private OnImageCallback onImageCallback;\r\n    RetrofitClient retrofitClient = new RetrofitClient();\r\n    String endFlcId, mailFlc;\r\n    Button btnFinish;\r\n    private TextView tvBirthday;\r\n    private EditText edtTen, edtEmail, edtDiaChi, edtSDT, edtTrinhDoNgoaiNgu, edtNgheNghiep, edtHocVan;\r\n    private String ten = \"\", mail = \"\", sdt = \"\", ngheNghiep = \"\", ngaySinh = \"\", trinhDoNgoaiNgu = \"\", hocVan = \"\", gioiTinh = \"\", diaChi = \"\";\r\n    public final int REQUEST_IMAGE_CAPTURE = 1;\r\n    public final int REQUEST_IMAGE_GALLERY = 2;\r\n    private ArrayList<Location> locations;\r\n    CustomProgressBar customProgressBar;\r\n    private static File mFileName;\r\n    private static Bitmap bitmap;\r\n    private View view;\r\n    private static boolean isCapture = false;\r\n    private static boolean isGallery = false;\r\n    Uri selectedImage;\r\n    private static Bitmap avatar;\r\n    private String avatarUser;\r\n    private boolean isDone = false;\r\n    String accessTokenDb;\r\n    private boolean isHasAvatar = false;\r\n\r\n    public String getFileName() {\r\n        return mFileName.getPath();\r\n    }\r\n\r\n    public OnImageCallback setImageCallback() {\r\n        return onImageCallback;\r\n    }\r\n\r\n    public ProfileFreelancerFragment() {\r\n        this.onImageCallback = this;\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        onImageCallback = this;\r\n\r\n        customProgressBar = new CustomProgressBar(getContext());\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        view = inflater.inflate(R.layout.fragment_freelancer_profile, null);\r\n\r\n        // map item and set action click\r\n        mapItem(view);\r\n\r\n        if (LoginFreelancerFragment._id != null) {\r\n            endFlcId = LoginFreelancerFragment._id;\r\n            mailFlc = LoginFreelancerFragment.flcEmail;\r\n            accessTokenDb = LoginFreelancerFragment.accessTokenDb;\r\n        } else {\r\n            endFlcId = AuthActivity.flcId;\r\n            mailFlc = AuthActivity.flcEmail;\r\n            accessTokenDb = AuthActivity.accessTokenDbFlc;\r\n        }\r\n\r\n        Log.d(\"test\", \"mapItem: \" + mailFlc);\r\n        edtEmail.setText(mailFlc);\r\n\r\n        //dummy data\r\n        ArrayAdapter aa = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, sexs);\r\n        aa.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        //Setting the ArrayAdapter data on the Spinner\r\n        spGioiTinh.setAdapter(aa);\r\n\r\n        ArrayAdapter bb = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, getDistrict());\r\n        bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        //Setting the ArrayAdapter data on the Spinner\r\n        spQuan.setAdapter(bb);\r\n\r\n        getCity();\r\n\r\n        spTP.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {\r\n                String tinh = spTP.getSelectedItem().toString();\r\n                for (Location location : locations) {\r\n                    if (tinh.equals(location.getTitle())) {\r\n                        getDistrict(location.getID());\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> adapterView) {\r\n\r\n            }\r\n        });\r\n\r\n        getProfileFlc();\r\n\r\n        return view;\r\n    }\r\n\r\n    private void getProfileFlc() {\r\n\r\n        customProgressBar.show();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getFlcProfile(endFlcId, accessTokenDb).enqueue(new Callback<Freelancer>() {\r\n            @Override\r\n            public void onResponse(Call<Freelancer> call, Response<Freelancer> response) {\r\n                Freelancer freelancer = response.body();\r\n\r\n                if (freelancer != null) {\r\n                    String avatar = freelancer.getFlcAvatar();\r\n                    avatarUser = avatar;\r\n                    if (avatar != null && !avatar.equals(\"\")) {\r\n                        isHasAvatar = true;\r\n                        // parse base64 to bitmap (param : avataruser:  Result : String base 64 to bitmap)\r\n                        byte[] decodedString = Base64.decode(avatar, Base64.DEFAULT);\r\n                        Bitmap decodedByte = BitmapFactory.decodeByteArray(decodedString, 0, decodedString.length);\r\n\r\n                        circleImageView.setImageBitmap(decodedByte);\r\n                    } else {\r\n                        circleImageView.setImageDrawable(getActivity().getDrawable(R.drawable.avatar_logo));\r\n                    }\r\n\r\n                    edtTen.setText(freelancer.getFlcName());\r\n                    edtEmail.setText(freelancer.getFlcEmail());\r\n                    if (freelancer.getFlcPhone() != null) {\r\n                        edtSDT.setText(freelancer.getFlcPhone() + \"\");\r\n                    } else {\r\n                        edtSDT.setHint(\"123456789\");\r\n                    }\r\n                    edtHocVan.setText(freelancer.getFlcEdu());\r\n                    edtNgheNghiep.setText(freelancer.getFlcMajor());\r\n                    edtTrinhDoNgoaiNgu.setText(freelancer.getFlcLanguages());\r\n                    String gioiTInh = freelancer.getFlcSex();\r\n                    if (gioiTInh != null) {\r\n                        if (gioiTInh.equals(\"Nam\")) {\r\n                            spGioiTinh.setSelection(0);\r\n                        } else {\r\n                            spGioiTinh.setSelection(1);\r\n                        }\r\n                    } else {\r\n                        spGioiTinh.setSelection(0);\r\n                    }\r\n                    if (freelancer.getFlcBirthday() != null && !freelancer.getFlcBirthday().equals(\"\")) {\r\n                        tvBirthday.setText(freelancer.getFlcBirthday());\r\n                    } else {\r\n                        tvBirthday.setHint(\"01-01-2000\");\r\n                    }\r\n\r\n                    Log.d(\"address : \", \"ad : ---- \" + freelancer.getFlcAddress() + \"index char ',' : \" + freelancer.getFlcAddress().indexOf(\",\") + \" char num2 ',' : \" + freelancer.getFlcAddress().indexOf(\",\",freelancer.getFlcAddress().indexOf(\",\") + 1));\r\n                    if (freelancer.getFlcAddress().contains(\",\")) {\r\n                        edtDiaChi.setText(freelancer.getFlcAddress().substring(0, freelancer.getFlcAddress().indexOf(\",\")));\r\n                    } else {\r\n                        edtDiaChi.setText(freelancer.getFlcAddress());\r\n                    }\r\n                }\r\n\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Freelancer> call, Throwable t) {\r\n\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void mapItem(View view) {\r\n        circleImageView = view.findViewById(R.id.img_avatar_freelancer_profile);\r\n        circleImageView.setOnClickListener(this);\r\n        edtTen = view.findViewById(R.id.edt_name_freelancer);\r\n        edtEmail = view.findViewById(R.id.edt_email_freelancer);\r\n        edtSDT = view.findViewById(R.id.edt_sdt_freelancer);\r\n        edtHocVan = view.findViewById(R.id.edt_hoc_van_freelancer);\r\n        edtNgheNghiep = view.findViewById(R.id.edt_nghe_nghiep_freelancer);\r\n        edtTrinhDoNgoaiNgu = view.findViewById(R.id.edt_trinh_do_ngoai_ngu_freelancer);\r\n        spGioiTinh = view.findViewById(R.id.sp_gioi_tinh_freelancer);\r\n        tvBirthday = view.findViewById(R.id.tv_ngay_sinh_freelancer);\r\n        tvBirthday.setOnClickListener(this);\r\n        spQuan = view.findViewById(R.id.sp_Quan);\r\n        spTP = view.findViewById(R.id.sp_TP);\r\n        edtDiaChi = view.findViewById(R.id.edt_dia_chi_freelancer);\r\n        btnFinish = view.findViewById(R.id.btn_finish_freelancer);\r\n        btnFinish.setOnClickListener(this);\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View view) {\r\n        switch (view.getId()) {\r\n            case R.id.tv_ngay_sinh_freelancer:\r\n                showDatePickerDialog();\r\n                break;\r\n            case R.id.img_avatar_freelancer_profile:\r\n\r\n                AuthActivity.takeFrom = \"freelancer\";\r\n                fragmentTransaction = getActivity().getSupportFragmentManager().beginTransaction();\r\n                CaptureDialog captureDialog = new CaptureDialog(this);\r\n                captureDialog.show(fragmentTransaction, CaptureDialog.TAG);\r\n\r\n                break;\r\n            case R.id.btn_finish_freelancer:\r\n\r\n                if (isDone || isHasAvatar) {\r\n                    flcUpdateInfo();\r\n                    btnFinish.setEnabled(false);\r\n                    Handler handler = new Handler();\r\n                    handler.postDelayed(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            btnFinish.setEnabled(true);\r\n                        }\r\n                    }, 3000);\r\n                    break;\r\n                } else {\r\n                    Toast.makeText(getActivity(), \"Vui lòng đợi trong giây lát.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n        }\r\n    }\r\n\r\n    // show dialog date picker\r\n    private void showDatePickerDialog() {\r\n        final DatePickerDialog StartTime = new DatePickerDialog(getActivity(), new DatePickerDialog.OnDateSetListener() {\r\n            public void onDateSet(DatePicker view, int year, int monthOfYear, int dayOfMonth) {\r\n                Calendar newDate = Calendar.getInstance();\r\n                newDate.set(year, monthOfYear, dayOfMonth);\r\n\r\n                SimpleDateFormat dateFormat = new SimpleDateFormat(DATE_FORMAT);\r\n                dateFormat.setTimeZone(TimeZone.getTimeZone(\"EN\"));\r\n                String date = dateFormat.format(newDate.getTime());\r\n                tvBirthday.setText(date);\r\n            }\r\n        }, newCalendar.get(Calendar.YEAR), newCalendar.get(Calendar.MONTH), newCalendar.get(Calendar.DAY_OF_MONTH));\r\n        StartTime.show();\r\n    }\r\n\r\n    @Override\r\n    public void takePicture() {\r\n        dispatchTakePictureIntent();\r\n    }\r\n\r\n    @Override\r\n    public void takeGallery() {\r\n\r\n        Intent intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n        intent.setType(\"image/*\");\r\n        getActivity().startActivityForResult(intent, REQUEST_IMAGE_GALLERY);\r\n\r\n    }\r\n\r\n    private Bitmap rotateImage(Bitmap source, float angle) {\r\n        Matrix matrix = new Matrix();\r\n        matrix.postRotate(angle);\r\n        return Bitmap.createBitmap(source, 0, 0, source.getWidth(), source.getHeight(),\r\n                matrix, true);\r\n    }\r\n\r\n    @Override\r\n    public void onImageCallback(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        Log.d(\"test\", \"onImageCallback: into image call back\");\r\n\r\n        if (requestCode == REQUEST_IMAGE_CAPTURE) {\r\n            if (resultCode == RESULT_OK) {\r\n\r\n                isCapture = true;\r\n                bitmap = null;\r\n\r\n                String s = getFileName();\r\n                Bitmap bm = BitmapFactory.decodeFile(s);\r\n                Matrix matrix = new Matrix();\r\n                matrix.postRotate(0);\r\n\r\n                ExifInterface ei = null;\r\n                int orientation = 0;\r\n                try {\r\n                    ei = new ExifInterface(s);\r\n                    orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION,\r\n                            ExifInterface.ORIENTATION_UNDEFINED);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n                switch (orientation) {\r\n\r\n                    case ExifInterface.ORIENTATION_ROTATE_90:\r\n                        bm = rotateImage(bm, 90);\r\n                        break;\r\n\r\n                    case ExifInterface.ORIENTATION_ROTATE_180:\r\n                        bm = rotateImage(bm, 180);\r\n                        break;\r\n\r\n                    case ExifInterface.ORIENTATION_ROTATE_270:\r\n                        bm = rotateImage(bm, 270);\r\n                        break;\r\n\r\n                    case ExifInterface.ORIENTATION_NORMAL:\r\n                    default:\r\n                        bm = bm;\r\n                        break;\r\n                }\r\n                Bitmap rotatedBitmap = Bitmap.createBitmap(bm, 0, 0, bm.getWidth(), bm.getHeight(), matrix, true);\r\n                bitmap = rotatedBitmap;\r\n\r\n            } else {\r\n                isCapture = false;\r\n            }\r\n\r\n        } else if (requestCode == REQUEST_IMAGE_GALLERY) {\r\n            if (resultCode == RESULT_OK) {\r\n                isGallery = true;\r\n                bitmap = null;\r\n\r\n                try {\r\n                    selectedImage = data.getData();\r\n\r\n                    Context context = AuthActivity.getContextApplication();\r\n                    bitmap = MediaStore.Images.Media.getBitmap(context.getContentResolver(), selectedImage);\r\n\r\n                } catch (IOException exception) {\r\n                    exception.printStackTrace();\r\n                }\r\n            } else {\r\n                isGallery = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onRemove() {\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n            circleImageView.setImageDrawable(getActivity().getDrawable(R.drawable.avatar_logo));\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        if (isGallery) {\r\n            circleImageView.setImageBitmap(bitmap);\r\n            avatar = bitmap;\r\n            isGallery = false;\r\n            bitmap = null;\r\n        } else if (isCapture) {\r\n            circleImageView.setImageBitmap(bitmap);\r\n            avatar = bitmap;\r\n            isCapture = false;\r\n            bitmap = null;\r\n        }\r\n        new MyThread().start();\r\n    }\r\n\r\n    private class MyThread extends Thread {\r\n        @Override\r\n        public void run() {\r\n            //TODO\r\n            avatarUser = \"\";\r\n\r\n            if (avatar != null) {\r\n\r\n                Bitmap resized = Bitmap.createScaledBitmap(avatar, (int) (avatar.getWidth() * 0.5), (int) (avatar.getHeight() * 0.5), true);\r\n\r\n                ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();\r\n                resized.compress(Bitmap.CompressFormat.JPEG, 50, byteArrayOutputStream);\r\n                byte[] byteArray = byteArrayOutputStream.toByteArray();\r\n\r\n                avatarUser = Base64.encodeToString(byteArray, Base64.DEFAULT);\r\n\r\n                isDone = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    void flcUpdateInfo() {\r\n\r\n        if (edtTen.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập tên.\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            ten = edtTen.getText().toString();\r\n        }\r\n\r\n        mail = edtEmail.getText().toString();\r\n\r\n        if (edtSDT.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập sdt.\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            sdt = edtSDT.getText().toString();\r\n        }\r\n\r\n        if (edtHocVan.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập học vấn.\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            hocVan = edtHocVan.getText().toString();\r\n        }\r\n\r\n        if (edtNgheNghiep.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập nghề nghiệp.\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            ngheNghiep = edtNgheNghiep.getText().toString();\r\n        }\r\n\r\n        if (edtTrinhDoNgoaiNgu.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập trình độ ngoại ngữ.\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            trinhDoNgoaiNgu = edtTrinhDoNgoaiNgu.getText().toString();\r\n        }\r\n\r\n        gioiTinh = spGioiTinh.getSelectedItem().toString();\r\n        ngaySinh = tvBirthday.getText().toString();\r\n\r\n        if (edtDiaChi.getText().toString().equals(\"\")) {\r\n            Toast.makeText(getActivity(), \"Bạn cần nhập địa chỉ.\", Toast.LENGTH_SHORT).show();\r\n        } else {\r\n            diaChi = edtDiaChi.getText().toString();\r\n            diaChi = diaChi + \", \" + spQuan.getSelectedItem().toString() + \", \" + spTP.getSelectedItem().toString();\r\n        }\r\n\r\n        if (!ten.equals(\"\") && !mail.equals(\"\") && !sdt.equals(\"\") && !hocVan.equals(\"\") && !ngheNghiep.equals(\"\") && !trinhDoNgoaiNgu.equals(\"\") && !diaChi.equals(\"\")) {\r\n\r\n            customProgressBar.show();\r\n\r\n            API api = retrofitClient.getClien().create(API.class);\r\n            api.flcUpdateInfo(ten + \"\",\r\n                    sdt + \"\",\r\n                    endFlcId + \"\",\r\n                    ngaySinh + \"\",\r\n                    avatarUser + \"\",\r\n                    gioiTinh + \"\",\r\n                    diaChi + \"\",\r\n                    hocVan + \"\",\r\n                    ngheNghiep + \"\",\r\n                    trinhDoNgoaiNgu + \"\",\r\n                    accessTokenDb).enqueue(new Callback<Freelancer>() {\r\n                @Override\r\n                public void onResponse(Call<Freelancer> call, Response<Freelancer> response) {\r\n\r\n                    if (response.code() == 200) {\r\n                        customProgressBar.dismiss();\r\n                        Toast.makeText(getActivity(), \"Cập nhật thông tin thành công.\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Call<Freelancer> call, Throwable t) {\r\n                    customProgressBar.dismiss();\r\n                    Toast.makeText(getActivity(), \"Sửa thông tin thất bại.\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    void createEmpFollowFlc() {\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.createEmpFollowFlc(\"flcId\", \"empId\", \"empId\", accessTokenDb + \"\").enqueue(new Callback<Void>() {\r\n            @Override\r\n            public void onResponse(Call<Void> call, Response<Void> response) {\r\n                System.out.println(\"code create emp follow flc \" + response.code());\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<Void> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n            }\r\n        });\r\n    }\r\n\r\n    private ArrayList<String> getDistrict() {\r\n        final ArrayList<String> districts = new ArrayList<>();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getDistrict(2).enqueue(new Callback<List<String>>() {\r\n            @Override\r\n            public void onResponse(Call<List<String>> call, Response<List<String>> response) {\r\n                List<String> strings = response.body();\r\n                districts.addAll(strings);\r\n                System.out.println(districts);\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<String>> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n            }\r\n        });\r\n        return districts;\r\n    }\r\n\r\n    private File createImageFile(Context context) {\r\n        // Create an image file name\r\n        String timeStamp = new SimpleDateFormat(\"yyyyMMdd_HHmmss\").format(new Date());\r\n        String imageFileName = timeStamp;\r\n        File storageDir = context.getExternalFilesDir(Environment.DIRECTORY_PICTURES);\r\n        File image = null;\r\n        try {\r\n            image = File.createTempFile(\r\n                    imageFileName,  /* prefix */\r\n                    \".jpg\",         /* suffix */\r\n                    storageDir     /* directory */\r\n            );\r\n        } catch (IOException e) {\r\n            e.printStackTrace();\r\n        }\r\n        mFileName = image;\r\n        Log.d(\"TAG\", \"createImageFile: \" + mFileName);\r\n        return image;\r\n    }\r\n\r\n    @SuppressLint(\"RestrictedApi\")\r\n    private void dispatchTakePictureIntent() {\r\n        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        if (takePictureIntent.resolveActivity(getActivity().getPackageManager()) != null) {\r\n            File photoFile = null;\r\n            photoFile = createImageFile(getContext());\r\n\r\n            if (photoFile != null) {\r\n                Uri photoURI = FileProvider.getUriForFile(getContext(), getContext().getPackageName() + \".provider\", photoFile);\r\n                deleteFile(photoFile.getName());\r\n                takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, photoURI);\r\n                getActivity().startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);\r\n                photoFile.deleteOnExit();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void getCity() {\r\n        customProgressBar.show();\r\n\r\n        province.clear();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getCity().enqueue(new Callback<List<Location>>() {\r\n            @Override\r\n            public void onResponse(Call<List<Location>> call, Response<List<Location>> response) {\r\n                locations = (ArrayList<Location>) response.body();\r\n\r\n                if (locations != null) {\r\n                    for (Location cc : locations) {\r\n                        province.add(cc.getTitle());\r\n                    }\r\n\r\n                    ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, province);\r\n                    cc.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    //Setting the ArrayAdapter data on the Spinner\r\n                    spTP.setAdapter(cc);\r\n                }\r\n                customProgressBar.dismiss();\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<Location>> call, Throwable t) {\r\n                System.out.println(\"err\");\r\n                customProgressBar.dismiss();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void getDistrict(int idProvince) {\r\n        customProgressBar.show();\r\n        districts.clear();\r\n        API api = retrofitClient.getClien().create(API.class);\r\n        api.getDistrict(idProvince).enqueue(new Callback<List<String>>() {\r\n            @Override\r\n            public void onResponse(Call<List<String>> call, Response<List<String>> response) {\r\n                List<String> strings = response.body();\r\n                if (strings != null) {\r\n                    districts.addAll(strings);\r\n                    ArrayAdapter bb = new ArrayAdapter(getContext(), android.R.layout.simple_spinner_item, districts);\r\n                    bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n                    spQuan.setAdapter(bb);\r\n                }\r\n                customProgressBar.dismiss();\r\n            }\r\n\r\n            @Override\r\n            public void onFailure(Call<List<String>> call, Throwable t) {\r\n                customProgressBar.dismiss();\r\n                System.out.println(\"err\");\r\n            }\r\n        });\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/vn/com/gojobs/Freelancer/ProfileFreelancerFragment.java	(revision 2a1e4d2b07ee0b027bca275792824f0d295c8020)
+++ app/src/main/java/vn/com/gojobs/Freelancer/ProfileFreelancerFragment.java	(date 1618571170029)
@@ -65,7 +65,7 @@
     public static final String TAG = "ProfileFreelancerFragment";
     final Calendar newCalendar = Calendar.getInstance();
     private final String DATE_FORMAT = "dd-MM-yyyy";
-    private Spinner spGioiTinh, spQuan, spTP;
+    private Spinner spGioiTinh, spProvince, spDistrict;
     private String[] sexs = {"Nam", "Nữ"};
     private ArrayList<String> districts = new ArrayList<>();
     private ArrayList<String> province = new ArrayList<>();
@@ -93,6 +93,7 @@
     private boolean isDone = false;
     String accessTokenDb;
     private boolean isHasAvatar = false;
+    private boolean loadDataDone = false;
 
     public String getFileName() {
         return mFileName.getPath();
@@ -133,7 +134,6 @@
             accessTokenDb = AuthActivity.accessTokenDbFlc;
         }
 
-        Log.d("test", "mapItem: " + mailFlc);
         edtEmail.setText(mailFlc);
 
         //dummy data
@@ -142,20 +142,15 @@
         //Setting the ArrayAdapter data on the Spinner
         spGioiTinh.setAdapter(aa);
 
-        ArrayAdapter bb = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, getDistrict());
-        bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        //Setting the ArrayAdapter data on the Spinner
-        spQuan.setAdapter(bb);
+        getDistrict();
 
-        getCity();
-
-        spTP.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
+        spDistrict.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {
             @Override
             public void onItemSelected(AdapterView<?> adapterView, View view, int i, long l) {
-                String tinh = spTP.getSelectedItem().toString();
+                String tinh = spDistrict.getSelectedItem().toString();
                 for (Location location : locations) {
                     if (tinh.equals(location.getTitle())) {
-                        getDistrict(location.getID());
+                        getProvince(location.getID());
                         break;
                     }
                 }
@@ -167,13 +162,10 @@
             }
         });
 
-        getProfileFlc();
-
         return view;
     }
 
     private void getProfileFlc() {
-
         customProgressBar.show();
         API api = retrofitClient.getClien().create(API.class);
         api.getFlcProfile(endFlcId, accessTokenDb).enqueue(new Callback<Freelancer>() {
@@ -195,7 +187,11 @@
                         circleImageView.setImageDrawable(getActivity().getDrawable(R.drawable.avatar_logo));
                     }
 
-                    edtTen.setText(freelancer.getFlcName());
+                    if (!freelancer.getFlcName().equals("")) {
+                        edtTen.setText(freelancer.getFlcName());
+                    } else {
+                        edtTen.setText("");
+                    }
                     edtEmail.setText(freelancer.getFlcEmail());
                     if (freelancer.getFlcPhone() != null) {
                         edtSDT.setText(freelancer.getFlcPhone() + "");
@@ -221,17 +217,34 @@
                         tvBirthday.setHint("01-01-2000");
                     }
 
-                    Log.d("address : ", "ad : ---- " + freelancer.getFlcAddress() + "index char ',' : " + freelancer.getFlcAddress().indexOf(",") + " char num2 ',' : " + freelancer.getFlcAddress().indexOf(",",freelancer.getFlcAddress().indexOf(",") + 1));
+                    Log.d("address : ", "ad : ---- " + freelancer.getFlcAddress() + "index char ',' : " + freelancer.getFlcAddress().indexOf(",") + " char num2 ',' : " + freelancer.getFlcAddress().indexOf(",", freelancer.getFlcAddress().indexOf(",") + 1));
                     if (freelancer.getFlcAddress().contains(",")) {
                         edtDiaChi.setText(freelancer.getFlcAddress().substring(0, freelancer.getFlcAddress().indexOf(",")));
+                        String quan = freelancer.getFlcAddress().substring(freelancer.getFlcAddress().indexOf(",") + 2, freelancer.getFlcAddress().indexOf(",", freelancer.getFlcAddress().indexOf(",") + 1)).trim();
+                        String tinh = freelancer.getFlcAddress().substring(freelancer.getFlcAddress().indexOf(",", freelancer.getFlcAddress().indexOf(",") + 1) + 2).trim();
+
+                        for (int i = 0; i < districts.size(); i++) {
+                            Log.e("duc", "onResponse: " + districts.get(i));
+                            if (districts.get(i).equals(tinh)) {
+                                spDistrict.setSelection(i);
+                                break;
+                            }
+                        }
+
+                        for (int i = 0; i < province.size(); i++) {
+                            Log.e("duc", "onResponse: " + province.get(i));
+                            if (province.get(i).equals(quan)) {
+                                spProvince.setSelection(i);
+                                break;
+                            }
+                        }
                     } else {
                         edtDiaChi.setText(freelancer.getFlcAddress());
                     }
                 }
-
                 customProgressBar.dismiss();
+                loadDataDone = true;
             }
-
             @Override
             public void onFailure(Call<Freelancer> call, Throwable t) {
 
@@ -252,8 +265,8 @@
         spGioiTinh = view.findViewById(R.id.sp_gioi_tinh_freelancer);
         tvBirthday = view.findViewById(R.id.tv_ngay_sinh_freelancer);
         tvBirthday.setOnClickListener(this);
-        spQuan = view.findViewById(R.id.sp_Quan);
-        spTP = view.findViewById(R.id.sp_TP);
+        spProvince = view.findViewById(R.id.sp_huyen);
+        spDistrict = view.findViewById(R.id.sp_tinh);
         edtDiaChi = view.findViewById(R.id.edt_dia_chi_freelancer);
         btnFinish = view.findViewById(R.id.btn_finish_freelancer);
         btnFinish.setOnClickListener(this);
@@ -488,7 +501,7 @@
             Toast.makeText(getActivity(), "Bạn cần nhập địa chỉ.", Toast.LENGTH_SHORT).show();
         } else {
             diaChi = edtDiaChi.getText().toString();
-            diaChi = diaChi + ", " + spQuan.getSelectedItem().toString() + ", " + spTP.getSelectedItem().toString();
+            diaChi = diaChi + ", " + spProvince.getSelectedItem().toString() + ", " + spDistrict.getSelectedItem().toString();
         }
 
         if (!ten.equals("") && !mail.equals("") && !sdt.equals("") && !hocVan.equals("") && !ngheNghiep.equals("") && !trinhDoNgoaiNgu.equals("") && !diaChi.equals("")) {
@@ -527,7 +540,7 @@
 
     void createEmpFollowFlc() {
         API api = retrofitClient.getClien().create(API.class);
-        api.createEmpFollowFlc("flcId", "empId", "empId", accessTokenDb + "").enqueue(new Callback<Void>() {
+        api.createEmpFollowFlc("flcId", "empId", "empId", accessTokenDb).enqueue(new Callback<Void>() {
             @Override
             public void onResponse(Call<Void> call, Response<Void> response) {
                 System.out.println("code create emp follow flc " + response.code());
@@ -540,25 +553,6 @@
         });
     }
 
-    private ArrayList<String> getDistrict() {
-        final ArrayList<String> districts = new ArrayList<>();
-        API api = retrofitClient.getClien().create(API.class);
-        api.getDistrict(2).enqueue(new Callback<List<String>>() {
-            @Override
-            public void onResponse(Call<List<String>> call, Response<List<String>> response) {
-                List<String> strings = response.body();
-                districts.addAll(strings);
-                System.out.println(districts);
-            }
-
-            @Override
-            public void onFailure(Call<List<String>> call, Throwable t) {
-                System.out.println("err");
-            }
-        });
-        return districts;
-    }
-
     private File createImageFile(Context context) {
         // Create an image file name
         String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
@@ -596,25 +590,25 @@
         }
     }
 
-    private void getCity() {
+    private void getDistrict() {
         customProgressBar.show();
 
-        province.clear();
+        districts.clear();
         API api = retrofitClient.getClien().create(API.class);
-        api.getCity().enqueue(new Callback<List<Location>>() {
+        api.getDistrict().enqueue(new Callback<List<Location>>() {
             @Override
             public void onResponse(Call<List<Location>> call, Response<List<Location>> response) {
                 locations = (ArrayList<Location>) response.body();
 
                 if (locations != null) {
                     for (Location cc : locations) {
-                        province.add(cc.getTitle());
+                        districts.add(cc.getTitle());
                     }
 
-                    ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, province);
+                    ArrayAdapter cc = new ArrayAdapter(getActivity(), android.R.layout.simple_spinner_item, districts);
                     cc.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
                     //Setting the ArrayAdapter data on the Spinner
-                    spTP.setAdapter(cc);
+                    spDistrict.setAdapter(cc);
                 }
                 customProgressBar.dismiss();
 
@@ -628,19 +622,23 @@
         });
     }
 
-    private void getDistrict(int idProvince) {
+    private void getProvince(int idProvince) {
         customProgressBar.show();
-        districts.clear();
+        province.clear();
         API api = retrofitClient.getClien().create(API.class);
-        api.getDistrict(idProvince).enqueue(new Callback<List<String>>() {
+        api.getProvince(idProvince).enqueue(new Callback<List<String>>() {
             @Override
             public void onResponse(Call<List<String>> call, Response<List<String>> response) {
                 List<String> strings = response.body();
                 if (strings != null) {
-                    districts.addAll(strings);
-                    ArrayAdapter bb = new ArrayAdapter(getContext(), android.R.layout.simple_spinner_item, districts);
+                    province.addAll(strings);
+                    ArrayAdapter bb = new ArrayAdapter(getContext(), android.R.layout.simple_spinner_item, province);
                     bb.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-                    spQuan.setAdapter(bb);
+                    spProvince.setAdapter(bb);
+                    if (!loadDataDone){
+                        getProfileFlc();
+                    }
+
                 }
                 customProgressBar.dismiss();
             }
